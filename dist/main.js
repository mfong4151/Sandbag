/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game */ \"./src/scripts/game.js\");\n\nconst observer = new IntersectionObserver(entries => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) entry.target.classList.add('show');else entry.target.classList.remove('show');\n  });\n});\nconst hiddenElements = document.querySelectorAll('.hidden');\nhiddenElements.forEach(el => observer.observe(el));\nconst toggleMusic = document.getElementById(\"mute-button\"),\n  restartButton = document.getElementById(\"restart-button\"),\n  canvas = document.getElementById(\"sandbag-game\");\nconst backgroundMusic = document.createElement(\"audio\");\nbackgroundMusic.src = \"./assets/sound/galdin_quay.mp3\";\nbackgroundMusic.volume = 0.5;\nlet musicStarted = false;\n//backgroundMusic.play();\n\nlet game = new _scripts_game__WEBPACK_IMPORTED_MODULE_0__[\"default\"](canvas);\ngame.play();\nwindow.addEventListener('keydown', event => game.convertKeydown(event.key));\nwindow.addEventListener('keyup', event => game.convertKeyRelease(event.key));\nwindow.addEventListener('click', () => game.convertLeftClick());\ntoggleMusic.addEventListener(\"click\", () => {\n  if (!musicStarted) {\n    backgroundMusic.play();\n    musicStarted = true;\n  } else if (musicStarted && backgroundMusic.volume !== 0) {\n    backgroundMusic.volume = 0;\n  } else {\n    backgroundMusic.volume = 0.5;\n  }\n});\nrestartButton.addEventListener(\"click\", () => {\n  game.reset();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6Ijs7QUFBa0M7QUFHbEMsTUFBTUMsUUFBUSxHQUFHLElBQUlDLG9CQUFvQixDQUFFQyxPQUFPLElBQUc7RUFDakRBLE9BQU8sQ0FBQ0MsT0FBTyxDQUFFQyxLQUFLLElBQUk7SUFFdEIsSUFBR0EsS0FBSyxDQUFDQyxjQUFjLEVBQUVELEtBQUssQ0FBQ0UsTUFBTSxDQUFDQyxTQUFTLENBQUNDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUV2REosS0FBSyxDQUFDRSxNQUFNLENBQUNDLFNBQVMsQ0FBQ0UsTUFBTSxDQUFDLE1BQU0sQ0FBQztFQUU5QyxDQUFDLENBQUM7QUFDTixDQUFDLENBQUM7QUFHRixNQUFNQyxjQUFjLEdBQUdDLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsU0FBUyxDQUFDO0FBQzNERixjQUFjLENBQUNQLE9BQU8sQ0FBRVUsRUFBRSxJQUFLYixRQUFRLENBQUNjLE9BQU8sQ0FBQ0QsRUFBRSxDQUFDLENBQUM7QUFFcEQsTUFBTUUsV0FBVyxHQUFHSixRQUFRLENBQUNLLGNBQWMsQ0FBQyxhQUFhLENBQUM7RUFBRUMsYUFBYSxHQUFHTixRQUFRLENBQUNLLGNBQWMsQ0FBQyxnQkFBZ0IsQ0FBQztFQUFFRSxNQUFNLEdBQUdQLFFBQVEsQ0FBQ0ssY0FBYyxDQUFDLGNBQWMsQ0FBQztBQUN2SyxNQUFNRyxlQUFlLEdBQUdSLFFBQVEsQ0FBQ1MsYUFBYSxDQUFDLE9BQU8sQ0FBQztBQUN2REQsZUFBZSxDQUFDRSxHQUFHLEdBQUcsZ0NBQWdDO0FBQ3RERixlQUFlLENBQUNHLE1BQU0sR0FBRyxHQUFHO0FBQzVCLElBQUlDLFlBQVksR0FBRyxLQUFLO0FBQ3hCOztBQUdBLElBQUlDLElBQUksR0FBRyxJQUFJekIscURBQUksQ0FBQ21CLE1BQU0sQ0FBQztBQUMzQk0sSUFBSSxDQUFDQyxJQUFJLEVBQUU7QUFFWEMsTUFBTSxDQUFDQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUdDLEtBQUssSUFBS0osSUFBSSxDQUFDSyxjQUFjLENBQUNELEtBQUssQ0FBQ0UsR0FBRyxDQUFDLENBQUM7QUFDN0VKLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFHQyxLQUFLLElBQUtKLElBQUksQ0FBQ08saUJBQWlCLENBQUNILEtBQUssQ0FBQ0UsR0FBRyxDQUFDLENBQUM7QUFFOUVKLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLE1BQU1ILElBQUksQ0FBQ1EsZ0JBQWdCLEVBQUUsQ0FBQztBQUUvRGpCLFdBQVcsQ0FBQ1ksZ0JBQWdCLENBQUMsT0FBTyxFQUFFLE1BQUk7RUFDdEMsSUFBRyxDQUFDSixZQUFZLEVBQUM7SUFDYkosZUFBZSxDQUFDTSxJQUFJLEVBQUU7SUFDdEJGLFlBQVksR0FBRyxJQUFJO0VBQ3ZCLENBQUMsTUFBSyxJQUFJQSxZQUFZLElBQUlKLGVBQWUsQ0FBQ0csTUFBTSxLQUFLLENBQUMsRUFBQztJQUNuREgsZUFBZSxDQUFDRyxNQUFNLEdBQUcsQ0FBQztFQUM5QixDQUFDLE1BQUs7SUFDRkgsZUFBZSxDQUFDRyxNQUFNLEdBQUcsR0FBRztFQUNoQztBQUNKLENBQUMsQ0FBQztBQUVGTCxhQUFhLENBQUNVLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxNQUFJO0VBQ3hDSCxJQUFJLENBQUNTLEtBQUssRUFBRTtBQUNoQixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR2FtZSBmcm9tIFwiLi9zY3JpcHRzL2dhbWVcIjtcblxuXG5jb25zdCBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcigoZW50cmllcyk9PntcbiAgICBlbnRyaWVzLmZvckVhY2goKGVudHJ5KSA9PntcblxuICAgICAgICBpZihlbnRyeS5pc0ludGVyc2VjdGluZykgZW50cnkudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcbiAgICAgICAgXG4gICAgICAgIGVsc2UgZW50cnkudGFyZ2V0LmNsYXNzTGlzdC5yZW1vdmUoJ3Nob3cnKVxuXG4gICAgfSk7XG59KTtcblxuXG5jb25zdCBoaWRkZW5FbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5oaWRkZW4nKTtcbmhpZGRlbkVsZW1lbnRzLmZvckVhY2goKGVsKSA9PiBvYnNlcnZlci5vYnNlcnZlKGVsKSk7XG5cbmNvbnN0IHRvZ2dsZU11c2ljID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtdXRlLWJ1dHRvblwiKSwgcmVzdGFydEJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzdGFydC1idXR0b25cIiksIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2FuZGJhZy1nYW1lXCIpO1xuY29uc3QgYmFja2dyb3VuZE11c2ljID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImF1ZGlvXCIpO1xuYmFja2dyb3VuZE11c2ljLnNyYyA9IFwiLi9hc3NldHMvc291bmQvZ2FsZGluX3F1YXkubXAzXCI7XG5iYWNrZ3JvdW5kTXVzaWMudm9sdW1lID0gMC41O1xubGV0IG11c2ljU3RhcnRlZCA9IGZhbHNlO1xuLy9iYWNrZ3JvdW5kTXVzaWMucGxheSgpO1xuXG5cbmxldCBnYW1lID0gbmV3IEdhbWUoY2FudmFzKTtcbmdhbWUucGxheSgpO1xuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChldmVudCkgPT4gZ2FtZS5jb252ZXJ0S2V5ZG93bihldmVudC5rZXkpKVxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGV2ZW50KSA9PiBnYW1lLmNvbnZlcnRLZXlSZWxlYXNlKGV2ZW50LmtleSkpXG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IGdhbWUuY29udmVydExlZnRDbGljaygpKTtcblxudG9nZ2xlTXVzaWMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpPT57XG4gICAgaWYoIW11c2ljU3RhcnRlZCl7XG4gICAgICAgIGJhY2tncm91bmRNdXNpYy5wbGF5KCk7XG4gICAgICAgIG11c2ljU3RhcnRlZCA9IHRydWU7XG4gICAgfWVsc2UgaWYgKG11c2ljU3RhcnRlZCAmJiBiYWNrZ3JvdW5kTXVzaWMudm9sdW1lICE9PSAwKXtcbiAgICAgICAgYmFja2dyb3VuZE11c2ljLnZvbHVtZSA9IDA7XG4gICAgfWVsc2Uge1xuICAgICAgICBiYWNrZ3JvdW5kTXVzaWMudm9sdW1lID0gMC41O1xuICAgIH0gXG59KVxuXG5yZXN0YXJ0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKT0+e1xuICAgIGdhbWUucmVzZXQoKTtcbn0pIl0sIm5hbWVzIjpbIkdhbWUiLCJvYnNlcnZlciIsIkludGVyc2VjdGlvbk9ic2VydmVyIiwiZW50cmllcyIsImZvckVhY2giLCJlbnRyeSIsImlzSW50ZXJzZWN0aW5nIiwidGFyZ2V0IiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwiaGlkZGVuRWxlbWVudHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJlbCIsIm9ic2VydmUiLCJ0b2dnbGVNdXNpYyIsImdldEVsZW1lbnRCeUlkIiwicmVzdGFydEJ1dHRvbiIsImNhbnZhcyIsImJhY2tncm91bmRNdXNpYyIsImNyZWF0ZUVsZW1lbnQiLCJzcmMiLCJ2b2x1bWUiLCJtdXNpY1N0YXJ0ZWQiLCJnYW1lIiwicGxheSIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJldmVudCIsImNvbnZlcnRLZXlkb3duIiwia2V5IiwiY29udmVydEtleVJlbGVhc2UiLCJjb252ZXJ0TGVmdENsaWNrIiwicmVzZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/background.js":
/*!***********************************!*\
  !*** ./src/scripts/background.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Background; }\n/* harmony export */ });\nclass Background {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.dynamicWidth = this.dimensions.width;\n    this.background = this.importBackground();\n  }\n  importBackground() {\n    let background1 = new Image(),\n      background2 = new Image();\n\n    //let attackLeft = new Image(), attackRight = new Image()\n\n    const allAnimations = [background1, background2];\n    const allPaths = ['./assets/image/background/field_1.jpg', './assets/image/background/field_1.jpg'];\n    for (let i = 0; i < allPaths.length; i++) {\n      allAnimations[i].src = allPaths[i];\n    }\n    return {\n      background1,\n      background2\n    };\n  }\n  draw(ctx) {\n    ctx.drawImage(this.background.background1, 0, 0);\n  }\n  update() {}\n  //draw(ctx){\n  //        //this should take care of colo\n  //        ctx.fillStyle = DUMMYBG.DUMMY_COLOR;\n  //        ctx.fillRect(0, 0, this.dynamicWidth, this.dimensions.height);\n  //        ctx.fillStyle = 'black';\n  //        ctx.fillRect(0, this.dimensions.height * (3/5), this.dynamicWidth, 4);\n  //        ctx.fillStyle = 'black'\n  //        ctx.fillRect(0, this.dimensions.height * (85/100), this.dynamicWidth, 4);\n\n  //        //For bounce points\n\n  //        ctx.fillStyle = 'blue'\n  //        ctx.fillRect(0, 640, this.dynamicWidth, 4);\n  //}\n\n  animate(ctx) {\n    this.draw(ctx);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9iYWNrZ3JvdW5kLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFHZSxNQUFNQSxVQUFVO0VBQzNCQyxXQUFXLENBQUNDLFVBQVUsRUFBQztJQUNuQixJQUFJLENBQUNBLFVBQVUsR0FBR0EsVUFBVTtJQUM1QixJQUFJLENBQUNDLFlBQVksR0FBRyxJQUFJLENBQUNELFVBQVUsQ0FBQ0UsS0FBSztJQUN6QyxJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJLENBQUNDLGdCQUFnQixFQUFFO0VBQzdDO0VBR0FBLGdCQUFnQixHQUFFO0lBRWQsSUFBSUMsV0FBVyxHQUFHLElBQUlDLEtBQUssRUFBRTtNQUFFQyxXQUFXLEdBQUcsSUFBSUQsS0FBSyxFQUFFOztJQUV4RDs7SUFFQSxNQUFNRSxhQUFhLEdBQUcsQ0FBQ0gsV0FBVyxFQUFFRSxXQUFXLENBQUM7SUFDaEQsTUFBTUUsUUFBUSxHQUFFLENBQ1osdUNBQXVDLEVBQUUsdUNBQXVDLENBQUM7SUFHckYsS0FBSSxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdELFFBQVEsQ0FBQ0UsTUFBTSxFQUFFRCxDQUFDLEVBQUUsRUFBQztNQUNwQ0YsYUFBYSxDQUFDRSxDQUFDLENBQUMsQ0FBQ0UsR0FBRyxHQUFHSCxRQUFRLENBQUNDLENBQUMsQ0FBQztJQUN0QztJQUNBLE9BQU87TUFBQ0wsV0FBVztNQUFFRTtJQUFXLENBQUM7RUFDckM7RUFHQU0sSUFBSSxDQUFDQyxHQUFHLEVBQUM7SUFFTEEsR0FBRyxDQUFDQyxTQUFTLENBQ1QsSUFBSSxDQUFDWixVQUFVLENBQUNFLFdBQVcsRUFDMUIsQ0FBQyxFQUNELENBQUMsQ0FDRDtFQUVUO0VBQ0FXLE1BQU0sR0FBRSxDQUVSO0VBQ0E7RUFDSjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7RUFHQTs7RUFFQTtFQUNBO0VBQ0k7O0VBRUFDLE9BQU8sQ0FBQ0gsR0FBRyxFQUFDO0lBQ1IsSUFBSSxDQUFDRCxJQUFJLENBQUNDLEdBQUcsQ0FBQztFQUVsQjtBQUdKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvYmFja2dyb3VuZC5qcz80YmJjIl0sInNvdXJjZXNDb250ZW50IjpbIlxuXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhY2tncm91bmR7XG4gICAgY29uc3RydWN0b3IoZGltZW5zaW9ucyl7XG4gICAgICAgIHRoaXMuZGltZW5zaW9ucyA9IGRpbWVuc2lvbnM7XG4gICAgICAgIHRoaXMuZHluYW1pY1dpZHRoID0gdGhpcy5kaW1lbnNpb25zLndpZHRoXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZCA9IHRoaXMuaW1wb3J0QmFja2dyb3VuZCgpO1xuICAgIH1cblxuXG4gICAgaW1wb3J0QmFja2dyb3VuZCgpe1xuXG4gICAgICAgIGxldCBiYWNrZ3JvdW5kMSA9IG5ldyBJbWFnZSgpLCBiYWNrZ3JvdW5kMiA9IG5ldyBJbWFnZSgpO1xuICAgICAgXG4gICAgICAgIC8vbGV0IGF0dGFja0xlZnQgPSBuZXcgSW1hZ2UoKSwgYXR0YWNrUmlnaHQgPSBuZXcgSW1hZ2UoKVxuXG4gICAgICAgIGNvbnN0IGFsbEFuaW1hdGlvbnMgPSBbYmFja2dyb3VuZDEsIGJhY2tncm91bmQyXVxuICAgICAgICBjb25zdCBhbGxQYXRocyA9W1xuICAgICAgICAgICAgJy4vYXNzZXRzL2ltYWdlL2JhY2tncm91bmQvZmllbGRfMS5qcGcnLCAnLi9hc3NldHMvaW1hZ2UvYmFja2dyb3VuZC9maWVsZF8xLmpwZyddOyAgXG5cbiAgICAgICAgXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBhbGxQYXRocy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICBhbGxBbmltYXRpb25zW2ldLnNyYyA9IGFsbFBhdGhzW2ldXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtiYWNrZ3JvdW5kMSwgYmFja2dyb3VuZDJ9XG4gICAgfVxuXG5cbiAgICBkcmF3KGN0eCl7XG5cbiAgICAgICAgY3R4LmRyYXdJbWFnZShcbiAgICAgICAgICAgIHRoaXMuYmFja2dyb3VuZC5iYWNrZ3JvdW5kMSxcbiAgICAgICAgICAgICAwLFxuICAgICAgICAgICAgIDAsXG4gICAgICAgICAgICApXG5cbiAgICB9XG4gICAgdXBkYXRlKCl7XG5cbiAgICB9XG4gICAgLy9kcmF3KGN0eCl7XG4vLyAgICAgICAgLy90aGlzIHNob3VsZCB0YWtlIGNhcmUgb2YgY29sb1xuLy8gICAgICAgIGN0eC5maWxsU3R5bGUgPSBEVU1NWUJHLkRVTU1ZX0NPTE9SO1xuLy8gICAgICAgIGN0eC5maWxsUmVjdCgwLCAwLCB0aGlzLmR5bmFtaWNXaWR0aCwgdGhpcy5kaW1lbnNpb25zLmhlaWdodCk7XG4vLyAgICAgICAgY3R4LmZpbGxTdHlsZSA9ICdibGFjayc7XG4vLyAgICAgICAgY3R4LmZpbGxSZWN0KDAsIHRoaXMuZGltZW5zaW9ucy5oZWlnaHQgKiAoMy81KSwgdGhpcy5keW5hbWljV2lkdGgsIDQpO1xuLy8gICAgICAgIGN0eC5maWxsU3R5bGUgPSAnYmxhY2snXG4vLyAgICAgICAgY3R4LmZpbGxSZWN0KDAsIHRoaXMuZGltZW5zaW9ucy5oZWlnaHQgKiAoODUvMTAwKSwgdGhpcy5keW5hbWljV2lkdGgsIDQpO1xuXG5cbi8vICAgICAgICAvL0ZvciBib3VuY2UgcG9pbnRzXG5cbi8vICAgICAgICBjdHguZmlsbFN0eWxlID0gJ2JsdWUnXG4vLyAgICAgICAgY3R4LmZpbGxSZWN0KDAsIDY0MCwgdGhpcy5keW5hbWljV2lkdGgsIDQpO1xuICAgIC8vfVxuICAgIFxuICAgIGFuaW1hdGUoY3R4KXtcbiAgICAgICAgdGhpcy5kcmF3KGN0eCk7XG5cbiAgICB9XG5cbiAgICBcbn1cblxuIl0sIm5hbWVzIjpbIkJhY2tncm91bmQiLCJjb25zdHJ1Y3RvciIsImRpbWVuc2lvbnMiLCJkeW5hbWljV2lkdGgiLCJ3aWR0aCIsImJhY2tncm91bmQiLCJpbXBvcnRCYWNrZ3JvdW5kIiwiYmFja2dyb3VuZDEiLCJJbWFnZSIsImJhY2tncm91bmQyIiwiYWxsQW5pbWF0aW9ucyIsImFsbFBhdGhzIiwiaSIsImxlbmd0aCIsInNyYyIsImRyYXciLCJjdHgiLCJkcmF3SW1hZ2UiLCJ1cGRhdGUiLCJhbmltYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/background.js\n");

/***/ }),

/***/ "./src/scripts/caelum.js":
/*!*******************************!*\
  !*** ./src/scripts/caelum.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Caelum; }\n/* harmony export */ });\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/scripts/player.js\");\n\nclass Caelum extends _player__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(dimensions) {\n    super(dimensions);\n    this.animations = this.importSpriteSheets();\n  }\n  importSpriteSheets() {\n    let idleLeft = new Image(),\n      idleRight = new Image();\n    let walkLeft = new Image(),\n      walkRight = new Image();\n    let jumpLeft = new Image(),\n      jumpRight = new Image();\n    let attackLeft = new Image(),\n      attackRight = new Image();\n    const allAnimations = [idleLeft, idleRight, walkLeft, walkRight, jumpLeft, jumpRight, attackLeft, attackRight];\n    const allPaths = ['./assets/image/character/caelum/idle_left.png', './assets/image/character/caelum/idle_right.png', './assets/image/character/caelum/walk_left.png', './assets/image/character/caelum/walk_right.png', './assets/image/character/caelum/jump_left.png', './assets/image/character/caelum/jump_right.png', './assets/image/character/caelum/attack_left.png', './assets/image/character/caelum/attack_right.png'];\n    for (let i = 0; i < allPaths.length; i++) {\n      allAnimations[i].src = allPaths[i];\n    }\n    return {\n      idleLeft,\n      idleRight,\n      walkLeft,\n      walkRight,\n      jumpLeft,\n      jumpRight,\n      attackLeft,\n      attackRight\n    };\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9jYWVsdW0uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkI7QUFFZCxNQUFNQyxNQUFNLFNBQVNELCtDQUFNO0VBQ3RDRSxXQUFXLENBQUNDLFVBQVUsRUFBQztJQUNuQixLQUFLLENBQUNBLFVBQVUsQ0FBQztJQUNqQixJQUFJLENBQUNDLFVBQVUsR0FBRyxJQUFJLENBQUNDLGtCQUFrQixFQUFFO0VBRS9DO0VBRUFBLGtCQUFrQixHQUFFO0lBRWhCLElBQUlDLFFBQVEsR0FBRyxJQUFJQyxLQUFLLEVBQUU7TUFBRUMsU0FBUyxHQUFHLElBQUlELEtBQUssRUFBRTtJQUNuRCxJQUFJRSxRQUFRLEdBQUcsSUFBSUYsS0FBSyxFQUFFO01BQUVHLFNBQVMsR0FBRyxJQUFJSCxLQUFLLEVBQUU7SUFDbkQsSUFBSUksUUFBUSxHQUFHLElBQUlKLEtBQUssRUFBRTtNQUFFSyxTQUFTLEdBQUcsSUFBSUwsS0FBSyxFQUFFO0lBQ25ELElBQUlNLFVBQVUsR0FBRyxJQUFJTixLQUFLLEVBQUU7TUFBRU8sV0FBVyxHQUFHLElBQUlQLEtBQUssRUFBRTtJQUV2RCxNQUFNUSxhQUFhLEdBQUcsQ0FBQ1QsUUFBUSxFQUFFRSxTQUFTLEVBQUVDLFFBQVEsRUFBRUMsU0FBUyxFQUFFQyxRQUFRLEVBQUVDLFNBQVMsRUFBRUMsVUFBVSxFQUFFQyxXQUFXLENBQUM7SUFDOUcsTUFBTUUsUUFBUSxHQUFFLENBQ1osK0NBQStDLEVBQy9DLGdEQUFnRCxFQUNoRCwrQ0FBK0MsRUFDL0MsZ0RBQWdELEVBQ2hELCtDQUErQyxFQUMvQyxnREFBZ0QsRUFDaEQsaURBQWlELEVBQ2pELGtEQUFrRCxDQUVyRDtJQUdELEtBQUksSUFBSUMsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHRCxRQUFRLENBQUNFLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUM7TUFDcENGLGFBQWEsQ0FBQ0UsQ0FBQyxDQUFDLENBQUNFLEdBQUcsR0FBR0gsUUFBUSxDQUFDQyxDQUFDLENBQUM7SUFDdEM7SUFDQSxPQUFPO01BQUNYLFFBQVE7TUFBRUUsU0FBUztNQUFFQyxRQUFRO01BQUVDLFNBQVM7TUFBRUMsUUFBUTtNQUFFQyxTQUFTO01BQUVDLFVBQVU7TUFBRUM7SUFBVyxDQUFDO0VBQ25HO0FBR0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9jYWVsdW0uanM/YjM0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUGxheWVyIGZyb20gXCIuL3BsYXllclwiXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhZWx1bSBleHRlbmRzIFBsYXllcntcbiAgICBjb25zdHJ1Y3RvcihkaW1lbnNpb25zKXtcbiAgICAgICAgc3VwZXIoZGltZW5zaW9ucylcbiAgICAgICAgdGhpcy5hbmltYXRpb25zID0gdGhpcy5pbXBvcnRTcHJpdGVTaGVldHMoKTsgXG4gICAgICAgIFxuICAgIH1cblxuICAgIGltcG9ydFNwcml0ZVNoZWV0cygpe1xuXG4gICAgICAgIGxldCBpZGxlTGVmdCA9IG5ldyBJbWFnZSgpLCBpZGxlUmlnaHQgPSBuZXcgSW1hZ2UoKTtcbiAgICAgICAgbGV0IHdhbGtMZWZ0ID0gbmV3IEltYWdlKCksIHdhbGtSaWdodCA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBsZXQganVtcExlZnQgPSBuZXcgSW1hZ2UoKSwganVtcFJpZ2h0ID0gbmV3IEltYWdlKCk7XG4gICAgICAgIGxldCBhdHRhY2tMZWZ0ID0gbmV3IEltYWdlKCksIGF0dGFja1JpZ2h0ID0gbmV3IEltYWdlKCk7XG5cbiAgICAgICAgY29uc3QgYWxsQW5pbWF0aW9ucyA9IFtpZGxlTGVmdCwgaWRsZVJpZ2h0LCB3YWxrTGVmdCwgd2Fsa1JpZ2h0LCBqdW1wTGVmdCwganVtcFJpZ2h0LCBhdHRhY2tMZWZ0LCBhdHRhY2tSaWdodF1cbiAgICAgICAgY29uc3QgYWxsUGF0aHMgPVtcbiAgICAgICAgICAgICcuL2Fzc2V0cy9pbWFnZS9jaGFyYWN0ZXIvY2FlbHVtL2lkbGVfbGVmdC5wbmcnLFxuICAgICAgICAgICAgJy4vYXNzZXRzL2ltYWdlL2NoYXJhY3Rlci9jYWVsdW0vaWRsZV9yaWdodC5wbmcnLFxuICAgICAgICAgICAgJy4vYXNzZXRzL2ltYWdlL2NoYXJhY3Rlci9jYWVsdW0vd2Fsa19sZWZ0LnBuZycsXG4gICAgICAgICAgICAnLi9hc3NldHMvaW1hZ2UvY2hhcmFjdGVyL2NhZWx1bS93YWxrX3JpZ2h0LnBuZycsXG4gICAgICAgICAgICAnLi9hc3NldHMvaW1hZ2UvY2hhcmFjdGVyL2NhZWx1bS9qdW1wX2xlZnQucG5nJyxcbiAgICAgICAgICAgICcuL2Fzc2V0cy9pbWFnZS9jaGFyYWN0ZXIvY2FlbHVtL2p1bXBfcmlnaHQucG5nJyxcbiAgICAgICAgICAgICcuL2Fzc2V0cy9pbWFnZS9jaGFyYWN0ZXIvY2FlbHVtL2F0dGFja19sZWZ0LnBuZycsXG4gICAgICAgICAgICAnLi9hc3NldHMvaW1hZ2UvY2hhcmFjdGVyL2NhZWx1bS9hdHRhY2tfcmlnaHQucG5nJ1xuXG4gICAgICAgIF07XG5cbiAgICAgICAgXG4gICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBhbGxQYXRocy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICBhbGxBbmltYXRpb25zW2ldLnNyYyA9IGFsbFBhdGhzW2ldXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtpZGxlTGVmdCwgaWRsZVJpZ2h0LCB3YWxrTGVmdCwgd2Fsa1JpZ2h0LCBqdW1wTGVmdCwganVtcFJpZ2h0LCBhdHRhY2tMZWZ0LCBhdHRhY2tSaWdodH1cbiAgICB9XG5cblxufVxuIl0sIm5hbWVzIjpbIlBsYXllciIsIkNhZWx1bSIsImNvbnN0cnVjdG9yIiwiZGltZW5zaW9ucyIsImFuaW1hdGlvbnMiLCJpbXBvcnRTcHJpdGVTaGVldHMiLCJpZGxlTGVmdCIsIkltYWdlIiwiaWRsZVJpZ2h0Iiwid2Fsa0xlZnQiLCJ3YWxrUmlnaHQiLCJqdW1wTGVmdCIsImp1bXBSaWdodCIsImF0dGFja0xlZnQiLCJhdHRhY2tSaWdodCIsImFsbEFuaW1hdGlvbnMiLCJhbGxQYXRocyIsImkiLCJsZW5ndGgiLCJzcmMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/caelum.js\n");

/***/ }),

/***/ "./src/scripts/counter.js":
/*!********************************!*\
  !*** ./src/scripts/counter.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Counter; }\n/* harmony export */ });\nclass Counter {\n  constructor(dimensions) {\n    this.dimensions = dimensions;\n    this.distanceTraveled = -443;\n    this.maxHeight = 0;\n    this.sandbagPrevPos = {\n      x: 0,\n      y: 0\n    };\n    this.sessionHighScore = {\n      maxHeight: 0,\n      maxDistanceTraveled: 0\n    };\n    this.recordUpdated = false;\n  }\n  reset() {\n    this.maxHeight = 0;\n    this.distanceTraveled = -445;\n    this.recordUpdated = false;\n  }\n  updateDistanceTraveled(sandbag) {\n    if (sandbag.pos.x != this.sandbagPrevPos.x || sandbag.pos.y != this.sandbagPrevPos.y) {\n      this.distanceTraveled += Math.sqrt(sandbag.vel.x ** 2 + sandbag.vel.y ** 2);\n    }\n  }\n  forceScoreZero(time) {\n    if (time === 60) {\n      this.distanceTraveled = 0;\n    }\n  }\n  updateMaxHeightYeeted(sandbagPosY) {\n    this.maxHeight = Math.max(this.maxHeight, this.dimensions.floorPlane - sandbagPosY);\n  }\n  updatePreviousPos(sandbag) {\n    if (sandbag.pos.x != this.sandbagPrevPos.x || sandbag.pos.y != this.sandbagPrevPos.y) {\n      this.sandbagPrevPos.x = sandbag.pos.x;\n      this.sandbagPrevPos.y = sandbag.pos.y;\n    }\n  }\n  updateEndgame() {\n    if (!this.recordUpdated) {\n      this.sessionHighScore.maxHeight = Math.max(this.sessionHighScore.maxHeight, this.maxHeight);\n      this.sessionHighScore.maxDistanceTraveled = Math.max(this.sessionHighScore.maxDistanceTraveled, this.distanceTraveled);\n      this.recordUpdated = true;\n    }\n  }\n  drawEndgame(ctx) {\n    ctx.fillText(`Times up!`, this.dimensions.width / 2 - 75, this.dimensions.height / 3);\n    ctx.fillText(`Your highest distance score: ${Math.floor(this.sessionHighScore.maxDistanceTraveled)} Meters`, this.dimensions.width / 3, this.dimensions.height / 3 + 35);\n    ctx.fillText(`Your highest height score: ${Math.floor(this.sessionHighScore.maxHeight)} Meters`, this.dimensions.width / 3, this.dimensions.height / 3 + 70);\n  }\n  animateEndgame(ctx) {\n    this.updateEndgame();\n    this.drawEndgame(ctx);\n  }\n  draw(ctx) {\n    ctx.font = \"30px Calibri\";\n    ctx.fillText(`Total distance: ${Math.floor(this.distanceTraveled)} Meters`, 30, 50);\n    ctx.fillText(`Max Height: ${Math.floor(this.maxHeight)} Meters`, 30, 85);\n  }\n  update(sandbag) {\n    this.updatePreviousPos(sandbag);\n  }\n  animate(ctx) {\n    this.draw(ctx);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/counter.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Game; }\n/* harmony export */ });\n/* harmony import */ var _caelum__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./caelum */ \"./src/scripts/caelum.js\");\n/* harmony import */ var _sandbag__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sandbag */ \"./src/scripts/sandbag.js\");\n/* harmony import */ var _background__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./background */ \"./src/scripts/background.js\");\n/* harmony import */ var _counter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./counter */ \"./src/scripts/counter.js\");\n/* harmony import */ var _timer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./timer */ \"./src/scripts/timer.js\");\n/* harmony import */ var _offscreen__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./offscreen */ \"./src/scripts/offscreen.js\");\n\n\n\n\n\n\nclass Game {\n  constructor(canvas) {\n    this.ctx = canvas.getContext(\"2d\");\n    this.mapDimensions = {\n      width: canvas.width,\n      height: canvas.height,\n      floorPlane: 586\n    };\n    this.player = new _caelum__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this.mapDimensions);\n    this.sandbag = new _sandbag__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.mapDimensions);\n    this.sandbagOffScreen = new _offscreen__WEBPACK_IMPORTED_MODULE_5__[\"default\"]();\n    this.background = new _background__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.mapDimensions);\n    this.scoreCounter = new _counter__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this.mapDimensions);\n    this.timer = new _timer__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this.dimensions);\n    this.checkGameOver = false;\n    this.activeGame;\n  }\n\n  //Main gameplay loop\n\n  animate() {\n    this.checkGameOver = this.timer.checkGameOver();\n    this.ctx.clearRect(0, 0, this.mapDimensions.width, this.mapDimensions.height);\n    this.background.animate(this.ctx);\n    this.sandbagOffScreen.animate(this.ctx, this.sandbag);\n    this.scoreCounter.updateDistanceTraveled(this.sandbag);\n    this.scoreCounter.updateMaxHeightYeeted(this.sandbag.pos.y);\n    this.scoreCounter.updatePreviousPos(this.sandbag);\n    this.scoreCounter.animate(this.ctx, this.sandbag);\n    this.timer.animate(this.ctx);\n    this.sandbag.faceCharacter(this.player);\n    this.sandbag.animate(this.ctx);\n    this.player.animate(this.ctx);\n    //this.specialEffects.animate(this.ctx, this.player.state); //should animate left or right spear effects\n    //this.specialEffect.animate(this.ctx, this.sandbag.state)//should animate damaged animation\n    if (this.sandbag.inCollision(this.player)) {\n      this.sandbag.convertMomentum(this.player);\n    }\n    if (this.player.outOfBounds()) this.player.bounce();\n    if (this.sandbag.outOfBounds()) this.sandbag.bounce();\n    if (this.timer.checkGameOver()) this.scoreCounter.animateEndgame(this.ctx);\n    if (this.activeGame) {\n      requestAnimationFrame(this.animate.bind(this));\n    }\n  }\n  restart() {\n    this.player.reset();\n    this.sandbag.reset;\n  }\n  play() {\n    this.activeGame = true;\n    this.animate();\n    this.timer.decrimentTimer();\n  }\n  //resets bag pos, resets char pos\n  reset() {\n    this.player.reset(this.mapDimensions);\n    this.sandbag.reset(this.mapDimensions);\n    this.timer.reset();\n    this.scoreCounter.reset();\n  }\n  convertKeydown(userInput) {\n    if (userInput === \" \") {\n      this.player.doChargeAttack();\n    } else {\n      this.beginMovement(userInput);\n    }\n  }\n  beginMovement(userInput) {\n    if (!this.player.inBounce) {\n      this.player.move(userInput);\n    }\n  }\n  convertKeyRelease(userInput) {\n    if (userInput === \" \") {\n      this.player.releaseChargeAttack();\n    } else {\n      this.endMovement(userInput);\n    }\n  }\n  endMovement(userInput) {\n    this.player.endHorizontalMovement(userInput);\n  }\n  convertLeftClick() {\n    //Eventually i will want mute, pause, and choice buttons, this will require refactoring\n    this.player.doLightAttack();\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxDQUFDLE1BQUk7TUFDRCxJQUFJLENBQUNDLGFBQWEsQ0FBQ0YsU0FBUyxDQUFDO0lBQ2pDO0VBQ0o7RUFFQUUsYUFBYSxDQUFDRixTQUFTLEVBQUM7SUFDcEIsSUFBRyxDQUFDLElBQUksQ0FBQzdCLE1BQU0sQ0FBQ2dDLFFBQVEsRUFBQztNQUNyQixJQUFJLENBQUNoQyxNQUFNLENBQUNpQyxJQUFJLENBQUNKLFNBQVMsQ0FBQztJQUUvQjtFQUNKO0VBRUFLLGlCQUFpQixDQUFDTCxTQUFTLEVBQUM7SUFDeEIsSUFBR0EsU0FBUyxLQUFLLEdBQUcsRUFBQztNQUNqQixJQUFJLENBQUM3QixNQUFNLENBQUNtQyxtQkFBbUIsRUFBRTtJQUNyQyxDQUFDLE1BQUk7TUFDRCxJQUFJLENBQUNDLFdBQVcsQ0FBQ1AsU0FBUyxDQUFDO0lBQy9CO0VBQ0o7RUFFQU8sV0FBVyxDQUFDUCxTQUFTLEVBQUM7SUFFbEIsSUFBSSxDQUFDN0IsTUFBTSxDQUFDcUMscUJBQXFCLENBQUNSLFNBQVMsQ0FBQztFQUNoRDtFQUVBUyxnQkFBZ0IsR0FBRTtJQUNkO0lBQ0EsSUFBSSxDQUFDdEMsTUFBTSxDQUFDdUMsYUFBYSxFQUFFO0VBQy9CO0FBSUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy9nYW1lLmpzP2NkYzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhZWx1bSBmcm9tIFwiLi9jYWVsdW1cIjtcbmltcG9ydCBTYW5kYmFnVG90ZW0gZnJvbSBcIi4vc2FuZGJhZ1wiO1xuaW1wb3J0IEJhY2tncm91bmQgZnJvbSBcIi4vYmFja2dyb3VuZFwiO1xuaW1wb3J0IENvdW50ZXIgZnJvbSBcIi4vY291bnRlclwiXG5pbXBvcnQgVGltZXIgZnJvbSBcIi4vdGltZXJcIlxuaW1wb3J0IE9mZlNjcmVlblNhbmRiYWcgZnJvbSBcIi4vb2Zmc2NyZWVuXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWV7XG5cbiAgICBjb25zdHJ1Y3RvcihjYW52YXMpe1xuICAgICAgICB0aGlzLmN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG4gICAgICAgIHRoaXMubWFwRGltZW5zaW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBjYW52YXMud2lkdGgsIFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBjYW52YXMuaGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICAgICAgZmxvb3JQbGFuZTogNTg2XG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICBcbiAgICAgICAgdGhpcy5wbGF5ZXIgPSBuZXcgQ2FlbHVtKHRoaXMubWFwRGltZW5zaW9ucyk7XG4gICAgICAgIHRoaXMuc2FuZGJhZz0gbmV3IFNhbmRiYWdUb3RlbSh0aGlzLm1hcERpbWVuc2lvbnMpO1xuICAgICAgICB0aGlzLnNhbmRiYWdPZmZTY3JlZW4gPSBuZXcgT2ZmU2NyZWVuU2FuZGJhZygpO1xuICAgICAgICB0aGlzLmJhY2tncm91bmQgPSBuZXcgQmFja2dyb3VuZCh0aGlzLm1hcERpbWVuc2lvbnMpO1xuICAgICAgICB0aGlzLnNjb3JlQ291bnRlciA9IG5ldyBDb3VudGVyKHRoaXMubWFwRGltZW5zaW9ucyk7XG4gICAgICAgIHRoaXMudGltZXIgPSBuZXcgVGltZXIodGhpcy5kaW1lbnNpb25zKTtcbiAgICAgICAgdGhpcy5jaGVja0dhbWVPdmVyID0gZmFsc2U7XG4gICAgICAgIHRoaXMuYWN0aXZlR2FtZTtcbiAgICB9XG5cblxuICAgIC8vTWFpbiBnYW1lcGxheSBsb29wXG5cbiAgICBhbmltYXRlKCl7XG5cbiAgICAgICAgdGhpcy5jaGVja0dhbWVPdmVyID0gdGhpcy50aW1lci5jaGVja0dhbWVPdmVyKClcbiAgICAgICAgdGhpcy5jdHguY2xlYXJSZWN0KDAsIDAsIHRoaXMubWFwRGltZW5zaW9ucy53aWR0aCwgdGhpcy5tYXBEaW1lbnNpb25zLmhlaWdodClcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kLmFuaW1hdGUodGhpcy5jdHgpO1xuICAgICAgICB0aGlzLnNhbmRiYWdPZmZTY3JlZW4uYW5pbWF0ZSh0aGlzLmN0eCwgdGhpcy5zYW5kYmFnKTtcbiAgICAgICAgdGhpcy5zY29yZUNvdW50ZXIudXBkYXRlRGlzdGFuY2VUcmF2ZWxlZCh0aGlzLnNhbmRiYWcpO1xuICAgICAgICB0aGlzLnNjb3JlQ291bnRlci51cGRhdGVNYXhIZWlnaHRZZWV0ZWQodGhpcy5zYW5kYmFnLnBvcy55KTtcbiAgICAgICAgdGhpcy5zY29yZUNvdW50ZXIudXBkYXRlUHJldmlvdXNQb3ModGhpcy5zYW5kYmFnKTtcbiAgICAgICAgdGhpcy5zY29yZUNvdW50ZXIuYW5pbWF0ZSh0aGlzLmN0eCwgdGhpcy5zYW5kYmFnKTtcbiAgICAgICAgdGhpcy50aW1lci5hbmltYXRlKHRoaXMuY3R4KVxuICAgICAgICB0aGlzLnNhbmRiYWcuZmFjZUNoYXJhY3Rlcih0aGlzLnBsYXllcik7XG4gICAgICAgIHRoaXMuc2FuZGJhZy5hbmltYXRlKHRoaXMuY3R4KTtcbiAgICAgICAgdGhpcy5wbGF5ZXIuYW5pbWF0ZSh0aGlzLmN0eCk7XG4gICAgICAgIC8vdGhpcy5zcGVjaWFsRWZmZWN0cy5hbmltYXRlKHRoaXMuY3R4LCB0aGlzLnBsYXllci5zdGF0ZSk7IC8vc2hvdWxkIGFuaW1hdGUgbGVmdCBvciByaWdodCBzcGVhciBlZmZlY3RzXG4gICAgICAgIC8vdGhpcy5zcGVjaWFsRWZmZWN0LmFuaW1hdGUodGhpcy5jdHgsIHRoaXMuc2FuZGJhZy5zdGF0ZSkvL3Nob3VsZCBhbmltYXRlIGRhbWFnZWQgYW5pbWF0aW9uXG4gICAgICAgIGlmKHRoaXMuc2FuZGJhZy5pbkNvbGxpc2lvbih0aGlzLnBsYXllcikpe1xuICAgICAgICAgICAgdGhpcy5zYW5kYmFnLmNvbnZlcnRNb21lbnR1bSh0aGlzLnBsYXllcilcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wbGF5ZXIub3V0T2ZCb3VuZHMoKSkgdGhpcy5wbGF5ZXIuYm91bmNlKCk7XG4gICAgICAgIFxuICAgICAgICBpZiAodGhpcy5zYW5kYmFnLm91dE9mQm91bmRzKCkpIHRoaXMuc2FuZGJhZy5ib3VuY2UoKTtcbiAgICAgICAgXG4gICAgICAgIGlmICh0aGlzLnRpbWVyLmNoZWNrR2FtZU92ZXIoKSkgdGhpcy5zY29yZUNvdW50ZXIuYW5pbWF0ZUVuZGdhbWUodGhpcy5jdHgpO1xuICAgICAgICBcblxuXG4gICAgICAgIGlmICh0aGlzLmFjdGl2ZUdhbWUpIHtcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGUuYmluZCh0aGlzKSk7XG4gICAgICAgICAgfSAgICAgICAgXG4gICAgfVxuXG5cbiAgICByZXN0YXJ0KCl7XG4gICAgICAgIHRoaXMucGxheWVyLnJlc2V0KCk7XG4gICAgICAgIHRoaXMuc2FuZGJhZy5yZXNldDtcbiAgICB9XG5cbiAgICBwbGF5KCl7XG4gICAgICAgIHRoaXMuYWN0aXZlR2FtZSA9IHRydWU7XG4gICAgICAgIHRoaXMuYW5pbWF0ZSgpO1xuICAgICAgICB0aGlzLnRpbWVyLmRlY3JpbWVudFRpbWVyKClcbiAgICAgICBcbiAgICB9XG4gICAgLy9yZXNldHMgYmFnIHBvcywgcmVzZXRzIGNoYXIgcG9zXG4gICAgcmVzZXQoKXtcbiAgICAgICAgdGhpcy5wbGF5ZXIucmVzZXQodGhpcy5tYXBEaW1lbnNpb25zKTtcbiAgICAgICAgdGhpcy5zYW5kYmFnLnJlc2V0KHRoaXMubWFwRGltZW5zaW9ucyk7XG4gICAgICAgIHRoaXMudGltZXIucmVzZXQoKTtcbiAgICAgICAgdGhpcy5zY29yZUNvdW50ZXIucmVzZXQoKTtcbiAgICB9XG5cblxuICAgIGNvbnZlcnRLZXlkb3duKHVzZXJJbnB1dCl7XG4gICAgICAgIGlmKHVzZXJJbnB1dCA9PT0gXCIgXCIpe1xuICAgICAgICAgICAgdGhpcy5wbGF5ZXIuZG9DaGFyZ2VBdHRhY2soKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB0aGlzLmJlZ2luTW92ZW1lbnQodXNlcklucHV0KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGJlZ2luTW92ZW1lbnQodXNlcklucHV0KXtcbiAgICAgICAgaWYoIXRoaXMucGxheWVyLmluQm91bmNlKXtcbiAgICAgICAgICAgIHRoaXMucGxheWVyLm1vdmUodXNlcklucHV0KVxuXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb252ZXJ0S2V5UmVsZWFzZSh1c2VySW5wdXQpe1xuICAgICAgICBpZih1c2VySW5wdXQgPT09IFwiIFwiKXtcbiAgICAgICAgICAgIHRoaXMucGxheWVyLnJlbGVhc2VDaGFyZ2VBdHRhY2soKTtcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB0aGlzLmVuZE1vdmVtZW50KHVzZXJJbnB1dCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBlbmRNb3ZlbWVudCh1c2VySW5wdXQpeyBcbiAgICBcbiAgICAgICAgdGhpcy5wbGF5ZXIuZW5kSG9yaXpvbnRhbE1vdmVtZW50KHVzZXJJbnB1dClcbiAgICB9XG5cbiAgICBjb252ZXJ0TGVmdENsaWNrKCl7XG4gICAgICAgIC8vRXZlbnR1YWxseSBpIHdpbGwgd2FudCBtdXRlLCBwYXVzZSwgYW5kIGNob2ljZSBidXR0b25zLCB0aGlzIHdpbGwgcmVxdWlyZSByZWZhY3RvcmluZ1xuICAgICAgICB0aGlzLnBsYXllci5kb0xpZ2h0QXR0YWNrKCk7XG4gICAgfVxuXG5cbiAgXG59Il0sIm5hbWVzIjpbIkNhZWx1bSIsIlNhbmRiYWdUb3RlbSIsIkJhY2tncm91bmQiLCJDb3VudGVyIiwiVGltZXIiLCJPZmZTY3JlZW5TYW5kYmFnIiwiR2FtZSIsImNvbnN0cnVjdG9yIiwiY2FudmFzIiwiY3R4IiwiZ2V0Q29udGV4dCIsIm1hcERpbWVuc2lvbnMiLCJ3aWR0aCIsImhlaWdodCIsImZsb29yUGxhbmUiLCJwbGF5ZXIiLCJzYW5kYmFnIiwic2FuZGJhZ09mZlNjcmVlbiIsImJhY2tncm91bmQiLCJzY29yZUNvdW50ZXIiLCJ0aW1lciIsImRpbWVuc2lvbnMiLCJjaGVja0dhbWVPdmVyIiwiYWN0aXZlR2FtZSIsImFuaW1hdGUiLCJjbGVhclJlY3QiLCJ1cGRhdGVEaXN0YW5jZVRyYXZlbGVkIiwidXBkYXRlTWF4SGVpZ2h0WWVldGVkIiwicG9zIiwieSIsInVwZGF0ZVByZXZpb3VzUG9zIiwiZmFjZUNoYXJhY3RlciIsImluQ29sbGlzaW9uIiwiY29udmVydE1vbWVudHVtIiwib3V0T2ZCb3VuZHMiLCJib3VuY2UiLCJhbmltYXRlRW5kZ2FtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImJpbmQiLCJyZXN0YXJ0IiwicmVzZXQiLCJwbGF5IiwiZGVjcmltZW50VGltZXIiLCJjb252ZXJ0S2V5ZG93biIsInVzZXJJbnB1dCIsImRvQ2hhcmdlQXR0YWNrIiwiYmVnaW5Nb3ZlbWVudCIsImluQm91bmNlIiwibW92ZSIsImNvbnZlcnRLZXlSZWxlYXNlIiwicmVsZWFzZUNoYXJnZUF0dGFjayIsImVuZE1vdmVtZW50IiwiZW5kSG9yaXpvbnRhbE1vdmVtZW50IiwiY29udmVydExlZnRDbGljayIsImRvTGlnaHRBdHRhY2siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/offscreen.js":
/*!**********************************!*\
  !*** ./src/scripts/offscreen.js ***!
  \**********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ OffScreenSandbag; }\n/* harmony export */ });\n/* harmony import */ var _sandbag__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sandbag */ \"./src/scripts/sandbag.js\");\n\nconst CONSTANTS = {\n  FRAME_SIZE: {\n    WIDTH: 200,\n    HEIGHT: 214\n  }\n};\nclass OffScreenSandbag {\n  constructor() {\n    this.activeFrameSet;\n    this.width = CONSTANTS.FRAME_SIZE.WIDTH;\n    this.height = CONSTANTS.FRAME_SIZE.HEIGHT;\n    this.pos = {\n      x: 0,\n      y: 0\n    }, this.frameSet = this.importSpriteSheets();\n  }\n  importSpriteSheets() {\n    let mushroomLeft = new Image(),\n      mushroomRight = new Image();\n    const allAnimations = [mushroomLeft, mushroomRight];\n    const allPaths = ['./assets/image/offscreen_mushroom/mushroom_left.png', './assets/image/offscreen_mushroom/mushroom_right.png'];\n    for (let i = 0; i < allPaths.length; i++) {\n      allAnimations[i].src = allPaths[i];\n    }\n    return {\n      mushroomLeft,\n      mushroomRight\n    };\n  }\n  //check if the sandbag is offscreen\n  sandbagOffScreen(sandbag) {\n    if (sandbag.pos.y2 <= 0) {\n      this.pos.x = sandbag.pos.x;\n      this.pos.y = 0;\n      return true;\n    } else return false;\n  }\n  frameChoice(sandbag) {\n    if (sandbag.direction.horizontal === -1) this.activeFrameSet = this.frameSet.mushroomLeft;else this.activeFrameSet = this.frameSet.mushroomRight;\n  }\n\n  //logic for chosing which frame of animation to render.\n\n  draw(ctx, sandbag) {\n    this.frameChoice(sandbag);\n    ctx.drawImage(this.activeFrameSet, 0, 0, this.width, this.height, this.pos.x, this.pos.y, this.width, this.height);\n  }\n  update(sandbag) {}\n  animate(ctx, sandbag) {\n    if (this.sandbagOffScreen(sandbag)) {\n      this.draw(ctx, sandbag);\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ZWJwYWNrOi8vLy4vc3JjL3NjcmlwdHMvb2Zmc2NyZWVuLmpzPzg0YjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNhbmRiYWdUb3RlbSBmcm9tIFwiLi9zYW5kYmFnXCI7XG5jb25zdCBDT05TVEFOVFMgPSB7XG4gICAgICAgICAgICBGUkFNRV9TSVpFOiB7V0lEVEg6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIEhFSUdIVDogMjE0XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE9mZlNjcmVlblNhbmRiYWd7XG4gICAgY29uc3RydWN0b3IoKXtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlRnJhbWVTZXQ7XG4gICAgICAgICAgICB0aGlzLndpZHRoPSBDT05TVEFOVFMuRlJBTUVfU0laRS5XSURUSDtcbiAgICAgICAgICAgIHRoaXMuaGVpZ2h0ID0gQ09OU1RBTlRTLkZSQU1FX1NJWkUuSEVJR0hUO1xuICAgICAgICAgICAgdGhpcy5wb3M9IHtcbiAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgIHk6MCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0aGlzLmZyYW1lU2V0ID0gdGhpcy5pbXBvcnRTcHJpdGVTaGVldHMoKVxuICAgICAgICBcbiAgICB9XG5cbiAgICBpbXBvcnRTcHJpdGVTaGVldHMoKXtcblxuICAgICAgICBsZXQgbXVzaHJvb21MZWZ0ID0gbmV3IEltYWdlKCksIG11c2hyb29tUmlnaHQgPSBuZXcgSW1hZ2UoKTtcblxuICAgICAgICBjb25zdCBhbGxBbmltYXRpb25zID0gW211c2hyb29tTGVmdCwgbXVzaHJvb21SaWdodF1cbiAgICAgICAgY29uc3QgYWxsUGF0aHMgPVtcbiAgICAgICAgICAgICcuL2Fzc2V0cy9pbWFnZS9vZmZzY3JlZW5fbXVzaHJvb20vbXVzaHJvb21fbGVmdC5wbmcnLFxuICAgICAgICAgICAgJy4vYXNzZXRzL2ltYWdlL29mZnNjcmVlbl9tdXNocm9vbS9tdXNocm9vbV9yaWdodC5wbmcnXG4gICAgICAgIF07XG4gICAgICAgIFxuICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgYWxsUGF0aHMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgYWxsQW5pbWF0aW9uc1tpXS5zcmMgPSBhbGxQYXRoc1tpXVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7bXVzaHJvb21MZWZ0LCBtdXNocm9vbVJpZ2h0fVxuICAgIH1cbiAgICAvL2NoZWNrIGlmIHRoZSBzYW5kYmFnIGlzIG9mZnNjcmVlblxuICAgIHNhbmRiYWdPZmZTY3JlZW4oc2FuZGJhZyl7XG5cbiAgICAgICAgaWYgKHNhbmRiYWcucG9zLnkyIDw9IDApe1xuICAgICAgICAgICAgdGhpcy5wb3MueCA9IHNhbmRiYWcucG9zLng7XG4gICAgICAgICAgICB0aGlzLnBvcy55ID0gMDtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGZyYW1lQ2hvaWNlKHNhbmRiYWcpe1xuICAgICAgICBpZiAoc2FuZGJhZy5kaXJlY3Rpb24uaG9yaXpvbnRhbCA9PT0gLTEpIHRoaXMuYWN0aXZlRnJhbWVTZXQgPSB0aGlzLmZyYW1lU2V0Lm11c2hyb29tTGVmdDtcbiAgICAgICAgZWxzZSB0aGlzLmFjdGl2ZUZyYW1lU2V0ID0gdGhpcy5mcmFtZVNldC5tdXNocm9vbVJpZ2h0O1xuICAgIH1cbiAgICBcbiAgICAvL2xvZ2ljIGZvciBjaG9zaW5nIHdoaWNoIGZyYW1lIG9mIGFuaW1hdGlvbiB0byByZW5kZXIuXG5cbiAgICBkcmF3KGN0eCwgc2FuZGJhZyl7XG5cbiAgICAgICAgdGhpcy5mcmFtZUNob2ljZShzYW5kYmFnKTtcbiAgICAgICAgY3R4LmRyYXdJbWFnZSh0aGlzLmFjdGl2ZUZyYW1lU2V0LCAwLCAwLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCwgXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucG9zLngsIHRoaXMucG9zLnksIHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0KTtcblxuICAgIH1cblxuXG4gICAgdXBkYXRlKHNhbmRiYWcpe1xuXG4gICAgfVxuXG4gICAgYW5pbWF0ZShjdHgsIHNhbmRiYWcpe1xuICAgICAgICBcbiAgICAgICAgaWYgKHRoaXMuc2FuZGJhZ09mZlNjcmVlbihzYW5kYmFnKSl7XG4gICAgICAgICAgICB0aGlzLmRyYXcoY3R4LCBzYW5kYmFnKTtcbiAgICAgICAgfVxuICAgIH1cbn0iXSwibmFtZXMiOlsiU2FuZGJhZ1RvdGVtIiwiQ09OU1RBTlRTIiwiRlJBTUVfU0laRSIsIldJRFRIIiwiSEVJR0hUIiwiT2ZmU2NyZWVuU2FuZGJhZyIsImNvbnN0cnVjdG9yIiwiYWN0aXZlRnJhbWVTZXQiLCJ3aWR0aCIsImhlaWdodCIsInBvcyIsIngiLCJ5IiwiZnJhbWVTZXQiLCJpbXBvcnRTcHJpdGVTaGVldHMiLCJtdXNocm9vbUxlZnQiLCJJbWFnZSIsIm11c2hyb29tUmlnaHQiLCJhbGxBbmltYXRpb25zIiwiYWxsUGF0aHMiLCJpIiwibGVuZ3RoIiwic3JjIiwic2FuZGJhZ09mZlNjcmVlbiIsInNhbmRiYWciLCJ5MiIsImZyYW1lQ2hvaWNlIiwiZGlyZWN0aW9uIiwiaG9yaXpvbnRhbCIsImRyYXciLCJjdHgiLCJkcmF3SW1hZ2UiLCJ1cGRhdGUiLCJhbmltYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/offscreen.js\n");

/***/ }),

/***/ "./src/scripts/phy_object.js":
/*!***********************************!*\
  !*** ./src/scripts/phy_object.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ PhysicsObject; }\n/* harmony export */ });\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/scripts/player.js\");\n//refers to any body that must obey the laws of game physics\n\n\nconst CONSTANTS = {\n  BOUNCE_OFFSET: 10\n};\nclass PhysicsObject {\n  constructor(dimensions, options) {\n    //Super overridden variables\n    this.height = options.height;\n    this.width = options.width;\n    this.mass = options.mass;\n    this.direction = {\n      horizontal: options.directionHorizontal,\n      vertical: options.directionVertical\n    };\n    //this.animations = options.animations\n    this.pos = {\n      x: options.defaultPosition.x,\n      y: options.defaultPosition.y,\n      x2: options.defaultPosition.x + options.width,\n      y2: options.defaultPosition.y + options.height,\n      defaultY: options.defaultPosition.y,\n      prev: {\n        x: options.defaultPosition.x,\n        y: options.defaultPosition.y\n      }\n    };\n    this.bounceOffset = options.bounceOffset;\n\n    //if character is idle, attack, in jump, etc.\n    this.state = 0;\n    //We should reevaluate if we need an \"in jump\"\n    this.drag = .3;\n    this.vel = {\n      x: 0,\n      y: 20\n    };\n    this.accel = {\n      x: 0,\n      y: 0\n    };\n    this.boundaries = this.setBoundaries(dimensions);\n  }\n  setBoundaries(dimensions) {\n    let leftBound, rightBound, floorBound, ceilingBound;\n    leftBound = 0;\n    ceilingBound = 0;\n    rightBound = dimensions.width - this.width - CONSTANTS.BOUNCE_OFFSET;\n    floorBound = dimensions.floorPlane - this.height + CONSTANTS.BOUNCE_OFFSET;\n    return {\n      leftBound,\n      rightBound,\n      floorBound,\n      ceilingBound\n    };\n  }\n\n  //change countdownOver after we get countdown running\n  outOfBounds() {\n    let countdownOver = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (this.pos.x <= this.boundaries.leftBound || this.pos.x >= this.boundaries.rightBound) {\n      //|| this.pos.y <= this.boundaries.ceilingBound){\n\n      return true;\n    }\n    return false;\n  }\n\n  //Used to \"bounce\" the physical object if it gets out of bounds\n\n  bounce() {\n    if (this.pos.x <= this.boundaries.leftBound) {\n      this.pos.x = 3;\n      this.pos.x2 = 3 + this.width;\n      this.direction.horizontal *= -1;\n    }\n    if (this.pos.x + this.width >= this.boundaries.rightBound) {\n      this.pos.x = this.boundaries.rightBound - 10;\n      this.direction.horizontal *= -1;\n    }\n    if (this.pos.y <= this.boundaries.ceilingBound) {\n      this.pos.y = 3;\n      this.vel.y *= -1;\n      //this.direction.vertical *= -1;\n    }\n\n    //if(this.pos.y >= this.boundaries.floorBound){\n\n    //    this.pos.y = this.boundaries.floorBound - this.height;\n    //}\n  }\n\n  moveVertical() {\n    this.pos.y += this.vel.y;\n    this.pos.y2 += this.vel.y;\n    if (this.pos.y + this.vel.y <= this.boundaries.floorBound) {\n      this.vel.y += this.gravity;\n    } else {\n      this.vel.y = 0;\n      if (this instanceof _player__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n        this.setStateIdle();\n      }\n    }\n  }\n  animate(ctx) {\n    this.update();\n    this.draw(ctx);\n  }\n\n  //Get files from folder to import\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/phy_object.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TestChar\": function() { return /* binding */ TestChar; },\n/* harmony export */   \"default\": function() { return /* binding */ Player; }\n/* harmony export */ });\n/* harmony import */ var _phy_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./phy_object */ \"./src/scripts/phy_object.js\");\n\nconst CONSTANTS = {\n  WIDTH: 91,\n  HEIGHT: 90,\n  MASS: 40,\n  BOUNCE_OFFSET: 3,\n  DEFAULT_DIRECTION: {\n    HORIZONTAL: 1,\n    VERTICAL: -1\n  },\n  //refers to the direction we're facing, 1 = right, -1 = left\n  DEFAULT_POSITION: {\n    x: 4,\n    y: 0\n  },\n  TEST_COLOR: 'blue',\n  DEFAULT_ACCEL: 0,\n  DEFAULT_VEL: 0,\n  DEFAULT_HP: 0,\n  STATE: {\n    IDLE: 0,\n    WALK: 1,\n    JUMP: 2,\n    ATTACK: 3,\n    CHARGE_ATTACK: 4\n  },\n  LIGHT_ATTACK: {\n    DAMAGE: .2,\n    VELOCITY_INPUT: {\n      X: 15,\n      Y: 30\n    }\n  }\n};\nclass Player extends _phy_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(dimensions) {\n    super(dimensions, {\n      height: CONSTANTS.HEIGHT,\n      width: CONSTANTS.WIDTH,\n      mass: CONSTANTS.MASS,\n      directionHorizontal: CONSTANTS.DEFAULT_DIRECTION.HORIZONTAL,\n      directionVertical: CONSTANTS.DEFAULT_DIRECTION.VERTICAL,\n      defaultPosition: {\n        x: dimensions.width / 4,\n        y: 100\n      }\n    });\n    this.gravity = .5;\n    this.activeFrameSet;\n    this.frame = 0;\n    this.gameFrame = 0;\n    this.lightAttack = {\n      attacking: false,\n      damage: CONSTANTS.LIGHT_ATTACK.DAMAGE,\n      velocityInput: {\n        x: CONSTANTS.LIGHT_ATTACK.VELOCITY_INPUT.X,\n        y: CONSTANTS.LIGHT_ATTACK.VELOCITY_INPUT.Y\n      },\n      animation: {\n        width: 224,\n        height: 148\n      },\n      areaOfEffect: {\n        left: this.pos.x - 40,\n        right: this.pos.x + 182,\n        up: this.pos.y - 30,\n        down: this.pos.y2 + 120\n      }\n    }, this.chargeAttack = {\n      attacking: false,\n      damage: 5,\n      velocityInput: 200,\n      animation: {\n        width: 224,\n        height: 148\n      }\n    };\n  }\n\n  //can be dried up\n  frameChoice() {\n    if (this.state === CONSTANTS.STATE.IDLE) {\n      if (this.direction.horizontal === -1) this.activeFrameSet = this.animations.idleLeft;else if (this.direction.horizontal === 1) this.activeFrameSet = this.animations.idleRight;\n    } else if (this.state === CONSTANTS.STATE.WALK) {\n      if (this.direction.horizontal === -1) this.activeFrameSet = this.animations.walkLeft;else if (this.direction.horizontal === 1) this.activeFrameSet = this.animations.walkRight;\n    } else if (this.state === CONSTANTS.STATE.JUMP) {\n      if (this.direction.horizontal === -1) this.activeFrameSet = this.animations.jumpLeft;else if (this.direction.horizontal === 1) this.activeFrameSet = this.animations.jumpRight;\n    } else if (this.state === CONSTANTS.STATE.ATTACK) {\n      if (this.direction.horizontal === -1) this.activeFrameSet = this.animations.attackLeft;else if (this.direction.horizontal === 1) this.activeFrameSet = this.animations.attackRight;\n    }\n  }\n  frameSetAnimation() {\n    if (this.state === CONSTANTS.STATE.ATTACK || this.state === CONSTANTS.STATE.CHARGE_ATTACK) {\n      if (this.gameFrame % 10 === 0) {\n        if (this.frame < 4) this.frame++;else this.frame = 0;\n      }\n      this.gameFrame++;\n    } else if (this.state === CONSTANTS.STATE.IDLE) {\n      if (this.gameFrame === 0) {\n        if (this.frame < 15) this.frame++;else this.frame = 0;\n      }\n      this.gameFrame++;\n    } else if (this.state === CONSTANTS.STATE.WALK) {\n      if (this.gameFrame % 11 === 0) {\n        if (this.frame < 4) this.frame++;else this.frame = 0;\n      }\n      this.gameFrame++;\n    } else if (this.state === CONSTANTS.STATE.JUMP) {\n      if (this.gameFrame % 2 === 0) {\n        if (this.frame < 1) this.frame++;else this.frame = 0;\n      }\n      this.gameFrame++;\n    } else if (this.state === CONSTANTS.STATE.ATTACK) {\n      if (this.gameFrame % 2 === 0) {\n        if (this.frame < 1) this.frame++;else this.frame = 0;\n      }\n    }\n  }\n  _drawAttackFrames(ctx) {\n    ctx.drawImage(this.activeFrameSet, this.frame * this.lightAttack.animation.width, 0, this.lightAttack.animation.width, this.lightAttack.animation.height, this.pos.x - 55, this.pos.y - 30, this.lightAttack.animation.width, this.lightAttack.animation.height);\n  }\n  draw(ctx) {\n    this.frameChoice();\n    if (this.state === CONSTANTS.STATE.ATTACK) this._drawAttackFrames(ctx);else {\n      ctx.drawImage(this.activeFrameSet, this.frame * this.width, 0, this.width, this.height, this.pos.x, this.pos.y, this.width, this.height);\n    }\n    this.frameSetAnimation();\n  }\n  increaseVelX() {\n    if (this.vel.x < 12) this.vel.x = 12;else if (this.vel.x >= 14 && this.vel.x < 40) this.vel.x += .5;\n  }\n  changeAnimationState() {\n    if (this.lightAttack.attacking) this.state = CONSTANTS.STATE.ATTACK;else if (this.vel.y < 0) this.state = CONSTANTS.STATE.JUMP;else if (this.vel.x === 0 && this.vel.y === 0) this.state = CONSTANTS.STATE.IDLE;else if (this.vel.y === 0 && this.vel.x > 0) this.state = CONSTANTS.STATE.WALK;\n  }\n  setStateIdle() {\n    this.state = CONSTANTS.STATE.IDLE;\n  }\n  jump() {\n    this.vel.y -= 15;\n  }\n  doLightAttack() {\n    if (!this.lightAttack.attacking) this.lightAttack.attacking = true;\n  }\n  updateLightAttackAOE() {\n    if (this.direction === 1) {\n      this.lightAttack.areaOfEffect.left = this.pos.x - 40;\n      this.lightAttack.areaOfEffect.right = this.pos.x + 182;\n    } else {\n      this.lightAttack.areaOfEffect.left = this.pos.x2 - 182;\n      this.lightAttack.areaOfEffect.right = this.pos.x + 40;\n    }\n    this.lightAttack.areaOfEffect.up = this.pos.y - 30;\n    this.lightAttack.areaOfEffect.down = this.pos.y2 + 120;\n  }\n  preformLightAttack() {\n    if (this.lightAttack.attacking) {\n      this.updateLightAttackAOE();\n      this.attackFrames;\n      this.state = CONSTANTS.STATE.ATTACK;\n      setTimeout(() => {\n        this.state = CONSTANTS.STATE.IDLE;\n        this.lightAttack.attacking = false;\n        this.frame = 0;\n      }, 500);\n      return true;\n    }\n    return false;\n  }\n  update() {\n    this.moveVertical();\n    this.moveHorizontal();\n    this.preformLightAttack();\n    this.changeAnimationState();\n  }\n  endHorizontalMovement() {\n    this.vel.x = 0;\n  }\n  moveHorizontal() {\n    this.pos.x2 += this.vel.x * this.direction.horizontal;\n    this.pos.x += this.vel.x * this.direction.horizontal;\n  }\n  doChargeAttack() {\n    this.state = CONSTANTS.STATE.CHARGE_ATTACK;\n  }\n  releaseChargeAttack() {}\n  move(wasd) {\n    switch (wasd) {\n      case 'w':\n        if (this.state !== CONSTANTS.STATE.JUMP) this.jump();\n        break;\n      case 'a':\n        this.direction.horizontal = -1;\n        this.increaseVelX();\n        break;\n      case 'd':\n        this.direction.horizontal = 1;\n        this.increaseVelX();\n        break;\n      case 's':\n        this.direction.vertical = -1;\n        break;\n    }\n  }\n  reset(dimensions) {\n    this.pos = {\n      x: dimensions.width / 4,\n      y: 0\n    }, this.vel = {\n      x: 0,\n      y: 0\n    };\n  }\n}\n\n//character classes\n//When constructing a character, we should super over options\nclass TestChar extends Player {\n  draw(ctx) {\n    //Gut these out for more shape sensitive items later\n    ctx.fillStyle = this.testColor;\n    ctx.fillRect(this.pos.x, this.pos.y, this.width, this.height);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUksQ0FBQ2UsWUFBWSxFQUFFO1FBQ25CO01BRUosS0FBSyxHQUFHO1FBQ0osSUFBSSxDQUFDaEIsU0FBUyxDQUFDQyxVQUFVLEdBQUcsQ0FBQztRQUM3QixJQUFJLENBQUNlLFlBQVksRUFBRTtRQUVuQjtNQUVKLEtBQUssR0FBRztRQUNKLElBQUksQ0FBQ2hCLFNBQVMsQ0FBQ21DLFFBQVEsR0FBRyxDQUFDLENBQUM7UUFDNUI7SUFBSztFQUVqQjtFQUVBQyxLQUFLLENBQUM5RCxVQUFVLEVBQUM7SUFDYixJQUFJLENBQUNrQixHQUFHLEdBQUU7TUFBQ3JDLENBQUMsRUFBRW1CLFVBQVUsQ0FBQ0UsS0FBSyxHQUFDLENBQUM7TUFDSnBCLENBQUMsRUFBRTtJQUNILENBQUMsRUFDN0IsSUFBSSxDQUFDNkQsR0FBRyxHQUFHO01BQ0M5RCxDQUFDLEVBQUUsQ0FBQztNQUNKQyxDQUFDLEVBQUU7SUFDSCxDQUFDO0VBQ2pCO0FBRUo7O0FBRUE7QUFDQTtBQUNBLE1BQU1pRixRQUFRLFNBQVNqRSxNQUFNO0VBRXpCMkMsSUFBSSxDQUFDRixHQUFHLEVBQUM7SUFDTDtJQUNBQSxHQUFHLENBQUN5QixTQUFTLEdBQUcsSUFBSSxDQUFDQyxTQUFTO0lBQzlCMUIsR0FBRyxDQUFDMkIsUUFBUSxDQUNSLElBQUksQ0FBQ2hELEdBQUcsQ0FBQ3JDLENBQUMsRUFDVixJQUFJLENBQUNxQyxHQUFHLENBQUNwQyxDQUFDLEVBQ1YsSUFBSSxDQUFDb0IsS0FBSyxFQUNWLElBQUksQ0FBQ0QsTUFBTSxDQUNaO0VBQ1A7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zY3JpcHRzL3BsYXllci5qcz82NDcxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQaHlzaWNzT2JqZWN0IGZyb20gXCIuL3BoeV9vYmplY3RcIjtcblxuXG5jb25zdCBDT05TVEFOVFMgPSB7XG4gICAgV0lEVEg6IDkxLFxuICAgIEhFSUdIVDogOTAsXG4gICAgTUFTUzogNDAsXG4gICAgQk9VTkNFX09GRlNFVDogMyxcbiAgICBERUZBVUxUX0RJUkVDVElPTjp7XG4gICAgICAgICAgICAgICAgICAgICAgICBIT1JJWk9OVEFMOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgVkVSVElDQUw6IC0xXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCAgLy9yZWZlcnMgdG8gdGhlIGRpcmVjdGlvbiB3ZSdyZSBmYWNpbmcsIDEgPSByaWdodCwgLTEgPSBsZWZ0XG4gICAgREVGQVVMVF9QT1NJVElPTjogeyB4OjQsXG4gICAgICAgICAgICAgICAgICAgICAgICB5OjAsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgIFRFU1RfQ09MT1IgOidibHVlJyxcbiAgICBERUZBVUxUX0FDQ0VMOiAwLFxuICAgIERFRkFVTFRfVkVMOiAwLFxuICAgIERFRkFVTFRfSFA6IDAsXG5cbiAgICBTVEFURTogeyAgXG4gICAgICAgIElETEU6IDAsXG4gICAgICAgIFdBTEs6IDEsXG4gICAgICAgIEpVTVA6IDIsXG4gICAgICAgIEFUVEFDSzogMyxcbiAgICAgICAgQ0hBUkdFX0FUVEFDSzogNFxuICAgIH0sXG5cbiAgICBMSUdIVF9BVFRBQ0s6e1xuICAgICAgICBEQU1BR0U6IC4yLFxuICAgICAgICBWRUxPQ0lUWV9JTlBVVDp7XG4gICAgICAgICAgICBYOjE1LFxuICAgICAgICAgICAgWTozMCxcbiAgICAgICAgfVxuICAgICAgICBcbiAgICB9XG5cbiAgICBcblxufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGxheWVyIGV4dGVuZHMgUGh5c2ljc09iamVjdHtcbiAgICBjb25zdHJ1Y3RvcihkaW1lbnNpb25zKXtcbiAgICAgICAgc3VwZXIoZGltZW5zaW9ucyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IENPTlNUQU5UUy5IRUlHSFQsXG4gICAgICAgICAgICAgICAgd2lkdGg6IENPTlNUQU5UUy5XSURUSCxcbiAgICAgICAgICAgICAgICBtYXNzOiBDT05TVEFOVFMuTUFTUyxcbiAgICAgICAgICAgICAgICBkaXJlY3Rpb25Ib3Jpem9udGFsOiBDT05TVEFOVFMuREVGQVVMVF9ESVJFQ1RJT04uSE9SSVpPTlRBTCxcbiAgICAgICAgICAgICAgICBkaXJlY3Rpb25WZXJ0aWNhbDogQ09OU1RBTlRTLkRFRkFVTFRfRElSRUNUSU9OLlZFUlRJQ0FMLFxuICAgICAgICAgICAgICAgIGRlZmF1bHRQb3NpdGlvbjp7eDogZGltZW5zaW9ucy53aWR0aC80LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5OiAxMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuZ3Jhdml0eSA9IC41O1xuICAgICAgICB0aGlzLmFjdGl2ZUZyYW1lU2V0O1xuICAgICAgICB0aGlzLmZyYW1lID0gMDtcbiAgICAgICAgdGhpcy5nYW1lRnJhbWUgPSAwO1xuICAgICAgICB0aGlzLmxpZ2h0QXR0YWNrID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dGFja2luZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGFtYWdlOiBDT05TVEFOVFMuTElHSFRfQVRUQUNLLkRBTUFHRSxcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZlbG9jaXR5SW5wdXQ6e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeDogQ09OU1RBTlRTLkxJR0hUX0FUVEFDSy5WRUxPQ0lUWV9JTlBVVC5YLCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHk6IENPTlNUQU5UUy5MSUdIVF9BVFRBQ0suVkVMT0NJVFlfSU5QVVQuWSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmltYXRpb246e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjI0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE0OFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJlYU9mRWZmZWN0OntcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IHRoaXMucG9zLnggLSA0MCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiB0aGlzLnBvcy54ICsgMTgyLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXA6IHRoaXMucG9zLnkgLTMwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG93bjogdGhpcy5wb3MueTIgKzEyMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcblxuICAgICAgICB0aGlzLmNoYXJnZUF0dGFjayA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0YWNraW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGFtYWdlOiA1LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2ZWxvY2l0eUlucHV0OiAyMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjp7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogMjI0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxNDhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvL2NhbiBiZSBkcmllZCB1cFxuICAgIGZyYW1lQ2hvaWNlKCl7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlID09PSBDT05TVEFOVFMuU1RBVEUuSURMRSl7XG4gICAgICAgICAgICAgaWYgKHRoaXMuZGlyZWN0aW9uLmhvcml6b250YWwgPT09IC0xKSB0aGlzLmFjdGl2ZUZyYW1lU2V0ID0gdGhpcy5hbmltYXRpb25zLmlkbGVMZWZ0O1xuICAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuZGlyZWN0aW9uLmhvcml6b250YWwgPT09IDEpIHRoaXMuYWN0aXZlRnJhbWVTZXQgPSB0aGlzLmFuaW1hdGlvbnMuaWRsZVJpZ2h0O1xuXG4gICAgICAgIH1lbHNlIGlmICh0aGlzLnN0YXRlID09PSBDT05TVEFOVFMuU1RBVEUuV0FMSyl7XG4gICAgICAgICAgICBpZiAodGhpcy5kaXJlY3Rpb24uaG9yaXpvbnRhbCA9PT0gLTEpIHRoaXMuYWN0aXZlRnJhbWVTZXQgPSB0aGlzLmFuaW1hdGlvbnMud2Fsa0xlZnQ7XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLmRpcmVjdGlvbi5ob3Jpem9udGFsID09PSAxKSB0aGlzLmFjdGl2ZUZyYW1lU2V0ID0gdGhpcy5hbmltYXRpb25zLndhbGtSaWdodDtcblxuICAgICAgICB9ZWxzZSBpZiAodGhpcy5zdGF0ZSA9PT0gQ09OU1RBTlRTLlNUQVRFLkpVTVApe1xuICAgICAgICAgICAgaWYgKHRoaXMuZGlyZWN0aW9uLmhvcml6b250YWwgPT09IC0xKSB0aGlzLmFjdGl2ZUZyYW1lU2V0ID0gdGhpcy5hbmltYXRpb25zLmp1bXBMZWZ0O1xuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5kaXJlY3Rpb24uaG9yaXpvbnRhbCA9PT0gMSkgdGhpcy5hY3RpdmVGcmFtZVNldCA9IHRoaXMuYW5pbWF0aW9ucy5qdW1wUmlnaHQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodGhpcy5zdGF0ZSA9PT0gQ09OU1RBTlRTLlNUQVRFLkFUVEFDSyl7XG4gICAgICAgICAgICBpZiAodGhpcy5kaXJlY3Rpb24uaG9yaXpvbnRhbCA9PT0gLTEpIHRoaXMuYWN0aXZlRnJhbWVTZXQgPSB0aGlzLmFuaW1hdGlvbnMuYXR0YWNrTGVmdDtcbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuZGlyZWN0aW9uLmhvcml6b250YWwgPT09IDEpIHRoaXMuYWN0aXZlRnJhbWVTZXQgPSB0aGlzLmFuaW1hdGlvbnMuYXR0YWNrUmlnaHQ7XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIGZyYW1lU2V0QW5pbWF0aW9uKCl7XG4gICAgICAgIGlmICh0aGlzLnN0YXRlID09PSBDT05TVEFOVFMuU1RBVEUuQVRUQUNLIHx8IHRoaXMuc3RhdGUgPT09IENPTlNUQU5UUy5TVEFURS5DSEFSR0VfQVRUQUNLKXtcbiAgICAgICAgICAgIGlmICh0aGlzLmdhbWVGcmFtZSAlIDEwID09PSAwKXtcbiAgICAgICAgICAgICAgaWYgKHRoaXMuZnJhbWUgPCA0KSB0aGlzLmZyYW1lKys7XG4gICAgICAgICAgICAgIGVsc2UgdGhpcy5mcmFtZSA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRoaXMuZ2FtZUZyYW1lICsrIFxuICBcbiAgICAgICAgICB9ZWxzZSBpZih0aGlzLnN0YXRlID09PSBDT05TVEFOVFMuU1RBVEUuSURMRSl7XG4gICAgICAgICAgICBpZiAodGhpcy5nYW1lRnJhbWUgPT09IDApe1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmZyYW1lIDwgMTUpIHRoaXMuZnJhbWUrKztcbiAgICAgICAgICAgICAgICBlbHNlIHRoaXMuZnJhbWUgPSAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5nYW1lRnJhbWUgKys7XG4gIFxuICAgICAgICAgIH1lbHNlIGlmICh0aGlzLnN0YXRlID09PSBDT05TVEFOVFMuU1RBVEUuV0FMSyl7XG4gICAgICAgICAgICAgIGlmICh0aGlzLmdhbWVGcmFtZSAlIDExID09PSAwKXtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5mcmFtZSA8IDQpIHRoaXMuZnJhbWUrKztcbiAgICAgICAgICAgICAgICBlbHNlIHRoaXMuZnJhbWUgPSAwO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRoaXMuZ2FtZUZyYW1lICsrO1xuICBcbiAgICAgICAgICB9ZWxzZSBpZiAodGhpcy5zdGF0ZSA9PT0gQ09OU1RBTlRTLlNUQVRFLkpVTVApe1xuICAgICAgICAgICAgICBpZiAodGhpcy5nYW1lRnJhbWUgJSAyID09PSAwKXtcbiAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmZyYW1lIDwgMSkgdGhpcy5mcmFtZSsrO1xuICAgICAgICAgICAgICAgICAgZWxzZSB0aGlzLmZyYW1lID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lRnJhbWUgKytcbiAgICAgICAgfWVsc2UgaWYgKHRoaXMuc3RhdGUgPT09IENPTlNUQU5UUy5TVEFURS5BVFRBQ0spe1xuICAgICAgICAgICAgICAgaWYgKHRoaXMuZ2FtZUZyYW1lICUgMiA9PT0gMCl7XG4gICAgICAgICAgICAgICAgICBpZiAodGhpcy5mcmFtZSA8IDEpIHRoaXMuZnJhbWUrKztcbiAgICAgICAgICAgICAgICAgIGVsc2UgdGhpcy5mcmFtZSA9IDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgXG5cbiAgICBfZHJhd0F0dGFja0ZyYW1lcyhjdHgpe1xuICAgICAgICBjdHguZHJhd0ltYWdlKFxuICAgICAgICAgICAgdGhpcy5hY3RpdmVGcmFtZVNldCxcbiAgICAgICAgICAgICB0aGlzLmZyYW1lICogdGhpcy5saWdodEF0dGFjay5hbmltYXRpb24ud2lkdGgsXG4gICAgICAgICAgICAgMCxcbiAgICAgICAgICAgICB0aGlzLmxpZ2h0QXR0YWNrLmFuaW1hdGlvbi53aWR0aCxcbiAgICAgICAgICAgICB0aGlzLmxpZ2h0QXR0YWNrLmFuaW1hdGlvbi5oZWlnaHQsXG4gICAgICAgICAgICB0aGlzLnBvcy54IC01NSxcbiAgICAgICAgICAgIHRoaXMucG9zLnkgLTMwLFxuICAgICAgICAgICAgdGhpcy5saWdodEF0dGFjay5hbmltYXRpb24ud2lkdGgsXG4gICAgICAgICAgICB0aGlzLmxpZ2h0QXR0YWNrLmFuaW1hdGlvbi5oZWlnaHRcbiAgICAgICAgXG4gICAgICAgICl9XG5cbiAgICBkcmF3KGN0eCl7XG5cbiAgICAgICAgdGhpcy5mcmFtZUNob2ljZSgpO1xuICAgIFxuICAgICAgICBpZih0aGlzLnN0YXRlID09PSBDT05TVEFOVFMuU1RBVEUuQVRUQUNLKSB0aGlzLl9kcmF3QXR0YWNrRnJhbWVzKGN0eCk7XG4gICAgICAgIGVsc2V7XG4gICAgICAgIGN0eC5kcmF3SW1hZ2UoXG4gICAgICAgICAgICB0aGlzLmFjdGl2ZUZyYW1lU2V0LFxuICAgICAgICAgICAgIHRoaXMuZnJhbWUgKiB0aGlzLndpZHRoLFxuICAgICAgICAgICAgIDAsXG4gICAgICAgICAgICAgdGhpcy53aWR0aCxcbiAgICAgICAgICAgICB0aGlzLmhlaWdodCxcbiAgICAgICAgICAgIHRoaXMucG9zLngsXG4gICAgICAgICAgICB0aGlzLnBvcy55LFxuICAgICAgICAgICAgdGhpcy53aWR0aCxcbiAgICAgICAgICAgIHRoaXMuaGVpZ2h0XG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5mcmFtZVNldEFuaW1hdGlvbigpO1xuICAgIH1cbiAgICBcbiAgICBcbiAgICBpbmNyZWFzZVZlbFgoKXtcbiAgICAgICAgaWYgKHRoaXMudmVsLnggPCAxMikgdGhpcy52ZWwueCA9IDEyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMudmVsLnggPj0gMTQgJiYgdGhpcy52ZWwueCA8IDQwKSB0aGlzLnZlbC54ICs9IC41XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICBjaGFuZ2VBbmltYXRpb25TdGF0ZSgpe1xuICAgICAgICBpZih0aGlzLmxpZ2h0QXR0YWNrLmF0dGFja2luZykgdGhpcy5zdGF0ZSA9IENPTlNUQU5UUy5TVEFURS5BVFRBQ0s7XG4gICAgICAgIGVsc2UgaWYgKHRoaXMudmVsLnkgPCAwKSB0aGlzLnN0YXRlID0gQ09OU1RBTlRTLlNUQVRFLkpVTVA7XG4gICAgICAgIGVsc2UgaWYgKHRoaXMudmVsLnggPT09IDAgJiYgdGhpcy52ZWwueSA9PT0gMCkgdGhpcy5zdGF0ZSA9IENPTlNUQU5UUy5TVEFURS5JRExFO1xuICAgICAgICBlbHNlIGlmICh0aGlzLnZlbC55ID09PSAwICYmIHRoaXMudmVsLnggPiAwKSB0aGlzLnN0YXRlID0gQ09OU1RBTlRTLlNUQVRFLldBTEs7XG4gICAgICAgIFxuICAgIH1cbiAgICBcbiAgICBzZXRTdGF0ZUlkbGUoKXtcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBDT05TVEFOVFMuU1RBVEUuSURMRTtcbiAgICB9XG4gICAgXG4gICAganVtcCgpe1xuXG4gICAgICAgIHRoaXMudmVsLnkgLT0gMTU7XG4gICAgfVxuXG4gICAgXG4gICAgZG9MaWdodEF0dGFjaygpe1xuICAgICAgICBpZighdGhpcy5saWdodEF0dGFjay5hdHRhY2tpbmcpICB0aGlzLmxpZ2h0QXR0YWNrLmF0dGFja2luZyA9IHRydWU7XG4gICAgfVxuXG4gICAgdXBkYXRlTGlnaHRBdHRhY2tBT0UoKXtcbiAgICAgICAgaWYgKHRoaXMuZGlyZWN0aW9uID09PSAxKXtcbiAgICAgICAgICAgIHRoaXMubGlnaHRBdHRhY2suYXJlYU9mRWZmZWN0LmxlZnQgPSB0aGlzLnBvcy54IC0gNDA7XG4gICAgICAgICAgICB0aGlzLmxpZ2h0QXR0YWNrLmFyZWFPZkVmZmVjdC5yaWdodCA9IHRoaXMucG9zLnggKyAxODI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZXtcbiAgICAgICAgICAgIHRoaXMubGlnaHRBdHRhY2suYXJlYU9mRWZmZWN0LmxlZnQgPSB0aGlzLnBvcy54MiAtIDE4MjtcbiAgICAgICAgICAgIHRoaXMubGlnaHRBdHRhY2suYXJlYU9mRWZmZWN0LnJpZ2h0ID0gdGhpcy5wb3MueCArIDQwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubGlnaHRBdHRhY2suYXJlYU9mRWZmZWN0LnVwID0gdGhpcy5wb3MueSAtMzA7XG4gICAgICAgIHRoaXMubGlnaHRBdHRhY2suYXJlYU9mRWZmZWN0LmRvd24gPSB0aGlzLnBvcy55MiArMTIwO1xuICAgIH1cblxuICAgIFxuICAgIHByZWZvcm1MaWdodEF0dGFjaygpe1xuICAgICAgICBpZiAodGhpcy5saWdodEF0dGFjay5hdHRhY2tpbmcpe1xuICAgICAgICAgICAgdGhpcy51cGRhdGVMaWdodEF0dGFja0FPRSgpO1xuICAgICAgICAgICAgdGhpcy5hdHRhY2tGcmFtZXM7XG4gICAgICAgICAgICB0aGlzLnN0YXRlID0gQ09OU1RBTlRTLlNUQVRFLkFUVEFDSztcbiAgICAgICAgICBcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCk9PntcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXRlID0gQ09OU1RBTlRTLlNUQVRFLklETEU7XG4gICAgICAgICAgICAgICAgdGhpcy5saWdodEF0dGFjay5hdHRhY2tpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB0aGlzLmZyYW1lID0gMFxuICAgICAgICAgICAgfSwgNTAwKVxuXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdXBkYXRlKCl7XG4gICAgXG4gICAgICAgIHRoaXMubW92ZVZlcnRpY2FsKCk7XG4gICAgICAgIHRoaXMubW92ZUhvcml6b250YWwoKTtcbiAgICAgICAgdGhpcy5wcmVmb3JtTGlnaHRBdHRhY2soKVxuICAgICAgICBcbiAgICAgICAgdGhpcy5jaGFuZ2VBbmltYXRpb25TdGF0ZSgpO1xuICAgIH1cbiAgICBcbiAgICBlbmRIb3Jpem9udGFsTW92ZW1lbnQoKXtcbiAgICAgICAgdGhpcy52ZWwueCA9IDBcbiAgICB9XG4gICAgbW92ZUhvcml6b250YWwoKXtcbiAgICAgICAgdGhpcy5wb3MueDIgKz0gdGhpcy52ZWwueCAqIHRoaXMuZGlyZWN0aW9uLmhvcml6b250YWw7XG4gICAgICAgIHRoaXMucG9zLnggKz0gdGhpcy52ZWwueCAqIHRoaXMuZGlyZWN0aW9uLmhvcml6b250YWw7XG4gICAgfVxuXG5cbiAgICBkb0NoYXJnZUF0dGFjaygpe1xuICAgICAgICB0aGlzLnN0YXRlID0gQ09OU1RBTlRTLlNUQVRFLkNIQVJHRV9BVFRBQ0s7XG4gICAgICAgIFxuICAgIH1cbiAgICByZWxlYXNlQ2hhcmdlQXR0YWNrKCl7XG5cbiAgICB9XG5cbiAgICBtb3ZlKHdhc2Qpe1xuICAgICAgICBzd2l0Y2ggKHdhc2Qpe1xuXG4gICAgICAgICAgICBjYXNlICd3JzpcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zdGF0ZSAhPT0gQ09OU1RBTlRTLlNUQVRFLkpVTVApXG4gICAgICAgICAgICAgICAgdGhpcy5qdW1wKCk7XG5cbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgY2FzZSAnYSc6XG4gICAgICAgICAgICAgICAgdGhpcy5kaXJlY3Rpb24uaG9yaXpvbnRhbCA9IC0xO1xuICAgICAgICAgICAgICAgIHRoaXMuaW5jcmVhc2VWZWxYKCk7XG4gICAgICAgICAgICAgICAgYnJlYWtcblxuICAgICAgICAgICAgY2FzZSAnZCc6XG4gICAgICAgICAgICAgICAgdGhpcy5kaXJlY3Rpb24uaG9yaXpvbnRhbCA9IDE7XG4gICAgICAgICAgICAgICAgdGhpcy5pbmNyZWFzZVZlbFgoKVxuXG4gICAgICAgICAgICAgICAgYnJlYWtcblxuICAgICAgICAgICAgY2FzZSAncyc6XG4gICAgICAgICAgICAgICAgdGhpcy5kaXJlY3Rpb24udmVydGljYWwgPSAtMVxuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXNldChkaW1lbnNpb25zKXtcbiAgICAgICAgdGhpcy5wb3M9IHt4OiBkaW1lbnNpb25zLndpZHRoLzQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5OiAwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICB0aGlzLnZlbCA9IHtcbiAgICAgICAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgICAgICAgeTogMFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgfVxuXG59XG5cbi8vY2hhcmFjdGVyIGNsYXNzZXNcbi8vV2hlbiBjb25zdHJ1Y3RpbmcgYSBjaGFyYWN0ZXIsIHdlIHNob3VsZCBzdXBlciBvdmVyIG9wdGlvbnNcbmNsYXNzIFRlc3RDaGFyIGV4dGVuZHMgUGxheWVye1xuICAgIFxuICAgIGRyYXcoY3R4KXtcbiAgICAgICAgLy9HdXQgdGhlc2Ugb3V0IGZvciBtb3JlIHNoYXBlIHNlbnNpdGl2ZSBpdGVtcyBsYXRlclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gdGhpcy50ZXN0Q29sb3I7XG4gICAgICAgIGN0eC5maWxsUmVjdChcbiAgICAgICAgICAgIHRoaXMucG9zLngsXG4gICAgICAgICAgICB0aGlzLnBvcy55LFxuICAgICAgICAgICAgdGhpcy53aWR0aCxcbiAgICAgICAgICAgIHRoaXMuaGVpZ2h0XG4gICAgICAgICAgKVxuICAgIH1cbn1cblxuXG5leHBvcnQge1Rlc3RDaGFyfTsgIl0sIm5hbWVzIjpbIlBoeXNpY3NPYmplY3QiLCJDT05TVEFOVFMiLCJXSURUSCIsIkhFSUdIVCIsIk1BU1MiLCJCT1VOQ0VfT0ZGU0VUIiwiREVGQVVMVF9ESVJFQ1RJT04iLCJIT1JJWk9OVEFMIiwiVkVSVElDQUwiLCJERUZBVUxUX1BPU0lUSU9OIiwieCIsInkiLCJURVNUX0NPTE9SIiwiREVGQVVMVF9BQ0NFTCIsIkRFRkFVTFRfVkVMIiwiREVGQVVMVF9IUCIsIlNUQVRFIiwiSURMRSIsIldBTEsiLCJKVU1QIiwiQVRUQUNLIiwiQ0hBUkdFX0FUVEFDSyIsIkxJR0hUX0FUVEFDSyIsIkRBTUFHRSIsIlZFTE9DSVRZX0lOUFVUIiwiWCIsIlkiLCJQbGF5ZXIiLCJjb25zdHJ1Y3RvciIsImRpbWVuc2lvbnMiLCJoZWlnaHQiLCJ3aWR0aCIsIm1hc3MiLCJkaXJlY3Rpb25Ib3Jpem9udGFsIiwiZGlyZWN0aW9uVmVydGljYWwiLCJkZWZhdWx0UG9zaXRpb24iLCJncmF2aXR5IiwiYWN0aXZlRnJhbWVTZXQiLCJmcmFtZSIsImdhbWVGcmFtZSIsImxpZ2h0QXR0YWNrIiwiYXR0YWNraW5nIiwiZGFtYWdlIiwidmVsb2NpdHlJbnB1dCIsImFuaW1hdGlvbiIsImFyZWFPZkVmZmVjdCIsImxlZnQiLCJwb3MiLCJyaWdodCIsInVwIiwiZG93biIsInkyIiwiY2hhcmdlQXR0YWNrIiwiZnJhbWVDaG9pY2UiLCJzdGF0ZSIsImRpcmVjdGlvbiIsImhvcml6b250YWwiLCJhbmltYXRpb25zIiwiaWRsZUxlZnQiLCJpZGxlUmlnaHQiLCJ3YWxrTGVmdCIsIndhbGtSaWdodCIsImp1bXBMZWZ0IiwianVtcFJpZ2h0IiwiYXR0YWNrTGVmdCIsImF0dGFja1JpZ2h0IiwiZnJhbWVTZXRBbmltYXRpb24iLCJfZHJhd0F0dGFja0ZyYW1lcyIsImN0eCIsImRyYXdJbWFnZSIsImRyYXciLCJpbmNyZWFzZVZlbFgiLCJ2ZWwiLCJjaGFuZ2VBbmltYXRpb25TdGF0ZSIsInNldFN0YXRlSWRsZSIsImp1bXAiLCJkb0xpZ2h0QXR0YWNrIiwidXBkYXRlTGlnaHRBdHRhY2tBT0UiLCJ4MiIsInByZWZvcm1MaWdodEF0dGFjayIsImF0dGFja0ZyYW1lcyIsInNldFRpbWVvdXQiLCJ1cGRhdGUiLCJtb3ZlVmVydGljYWwiLCJtb3ZlSG9yaXpvbnRhbCIsImVuZEhvcml6b250YWxNb3ZlbWVudCIsImRvQ2hhcmdlQXR0YWNrIiwicmVsZWFzZUNoYXJnZUF0dGFjayIsIm1vdmUiLCJ3YXNkIiwidmVydGljYWwiLCJyZXNldCIsIlRlc3RDaGFyIiwiZmlsbFN0eWxlIiwidGVzdENvbG9yIiwiZmlsbFJlY3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/scripts/sandbag.js":
/*!********************************!*\
  !*** ./src/scripts/sandbag.js ***!
  \********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ SandbagTotem; }\n/* harmony export */ });\n/* harmony import */ var _phy_object__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./phy_object */ \"./src/scripts/phy_object.js\");\n\nconst CONSTANTS = {\n  HEIGHT: 150,\n  WIDTH: 130,\n  MASS: 80,\n  DEFAULT_DIRECTION: {\n    HORIZONTAL: -1,\n    VERTICAL: -1\n  },\n  //refers to the direction we're facing, 1 = right, -1 = left\n  DEFAULT_POS: {\n    X: 2,\n    Y: 0\n  },\n  DEFAULT_VEL: 0,\n  DEFAULT_HP: 1,\n  GRAVITY: 4.8,\n  STATE: {\n    IDLE: 0,\n    DAMAGED: 1,\n    RECOVERY: 2\n  },\n  ANIMATION: {\n    IDLE_FRAMES: 5,\n    DAMAGED: 1,\n    POST: 1,\n    //post damage\n    WIDTH: 130,\n    HEIGHT: 150\n  },\n  BOUNCE_OFFSET: 10\n};\nclass SandbagTotem extends _phy_object__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(dimensions) {\n    super(dimensions, {\n      height: CONSTANTS.HEIGHT,\n      width: CONSTANTS.WIDTH,\n      mass: CONSTANTS.MASS,\n      directionHorizontal: CONSTANTS.DEFAULT_DIRECTION.HORIZONTAL,\n      directionVertical: CONSTANTS.DEFAULT_DIRECTION.VERTICAL,\n      testColor: CONSTANTS.TEST_COLOR,\n      bounceOffset: CONSTANTS.BOUNCE_OFFSET,\n      defaultPosition: {\n        x: dimensions.width / 2,\n        y: 0\n      }\n    });\n    this.animationDirection = CONSTANTS.DEFAULT_DIRECTION.HORIZONTAL;\n    //this.hp = CONSTANTS.DEFAULT_HP;\n    this.hp = CONSTANTS.DEFAULT_HP;\n    this.animations = this.importSpriteSheets();\n    this.activeFrameSet;\n    this.frame = 0;\n    this.gameFrame = 0;\n    this.gravity = .60;\n  }\n  importSpriteSheets() {\n    let idleLeft = new Image(),\n      idleRight = new Image(),\n      damagedLeft = new Image(),\n      damagedRight = new Image(),\n      postDamageLeft = new Image(),\n      postDamageRight = new Image();\n    const allAnimations = [idleLeft, idleRight, damagedLeft, damagedRight, postDamageLeft, postDamageRight];\n    const allPaths = ['./assets/image/mushroom/mushroom_idle_left.png', './assets/image/mushroom/mushroom_idle_right.png', './assets/image/mushroom/mushroom_damage_left.png', './assets/image/mushroom/mushroom_damage_right.png', './assets/image/mushroom/mushroom_post_damage_left.png', './assets/image/mushroom/mushroom_post_damage_right.png'];\n    for (let i = 0; i < allPaths.length; i++) allAnimations[i].src = allPaths[i];\n    return {\n      idleLeft,\n      idleRight,\n      damagedLeft,\n      damagedRight,\n      postDamageLeft,\n      postDamageRight\n    };\n  }\n  frameChoice() {\n    if (this.state === CONSTANTS.STATE.IDLE) {\n      if (this.animationDirection === 1) this.activeFrameSet = this.animations.idleLeft;else if (this.animationDirection === -1) this.activeFrameSet = this.animations.idleRight;\n    } else if (this.state === CONSTANTS.STATE.DAMAGED) {\n      if (this.animationDirection === 1) this.activeFrameSet = this.animations.damagedLeft;else if (this.animationDirection === -1) this.activeFrameSet = this.animations.damagedRight;\n    } else if (this.state === CONSTANTS.STATE.RECOVERY) {\n      if (this.animationDirection === 1) this.activeFrameSet = this.animations.postDamageLeft;else if (this.animationDirection === -1) this.activeFrameSet = this.animations.postDamageRight;\n    }\n  }\n\n  //logic for chosing which frame of animation to render.\n\n  frameSetAnimation() {\n    if (this.state === 0) {\n      if (this.gameFrame % 8 === 0) {\n        if (this.frame < 4) this.frame++;else this.frame = 0;\n      }\n      this.gameFrame++;\n    } else if (this.state === 1) {\n      //This logic needs to be tightened, should show damaged 1, then transition if no damage is done\n      this.frame = 0;\n      if (this.vel.y === 0 && this.vel.x < .3) {\n        this.state = 0;\n      }\n      this.gameFrame++;\n    }\n    //}else if (this.state === 2){\n    //    this.frame = 0\n    //    if (this.gameFrame % 4 === 0){\n    //        this.state = 0;\n    //    }\n    //}\n  }\n\n  inCollision(playerChar) {\n    this.pos.x2 = this.pos.x + this.width;\n    this.pos.y2 = this.pos.y + this.height;\n    let lightAttackAOE = playerChar.lightAttack.areaOfEffect;\n    if ((playerChar.state === 0 || playerChar.state === 1) && (playerChar.pos.x2 >= this.pos.x && playerChar.pos.x2 <= this.pos.x2 || playerChar.pos.x <= this.pos.x2 && playerChar.pos.x >= this.pos.x) && (playerChar.pos.y2 >= this.pos.y && playerChar.pos.y2 <= this.pos.y2 || playerChar.pos.y <= this.pos.y2 && playerChar.pos.y >= this.pos.y)) {\n      return true;\n    } else if ((playerChar.state === 3 || playerChar.state === 4) && (lightAttackAOE.right >= this.pos.x && lightAttackAOE.right <= this.pos.x2 || lightAttackAOE.left <= this.pos.x2 && lightAttackAOE.right >= this.pos.x) && (lightAttackAOE.down >= this.pos.y && lightAttackAOE.down <= this.pos.y2 || lightAttackAOE.up <= this.pos.y2 && lightAttackAOE.up >= this.pos.y)) {\n      return true;\n    }\n    return false;\n  }\n  convertMomentum(playerChar) {\n    let transferedVelocityY = 0,\n      transferedVelocityX = 0;\n    this.direction.horizontal = playerChar.direction.horizontal;\n    //If the player is walking, or in jump, decriment their velocity\n    if (playerChar.state === 1 || playerChar.state === 2) {\n      transferedVelocityX = playerChar.vel.x * playerChar.direction.horizontal / this.mass;\n      transferedVelocityY = playerChar.vel.y * playerChar.direction.vertical / this.mass;\n      playerChar.vel.x -= transferedVelocityX;\n      playerChar.vel.y -= transferedVelocityY;\n\n      //else if this is an attack, then we do not decriment player velocity\n    } else if (playerChar.state === 3 || playerChar.state === 4) {\n      let activeAttack;\n      this.state = CONSTANTS.STATE.DAMAGED;\n      if (playerChar.state === 3) activeAttack = playerChar.lightAttack;else activeAttack = playerChar.chargeAttack;\n      //incriment hp\n      this.hp += activeAttack.damage;\n      this.direction.horizontal = playerChar.direction.horizontal;\n      this.vel.x += activeAttack.velocityInput.x / this.mass * this.hp;\n      this.vel.y -= activeAttack.velocityInput.y / this.mass * this.hp;\n      //transferedVelocityX *= playerChar.direction.horizontal/this.mass * this.hp;\n    }\n  }\n\n  draw(ctx) {\n    this.frameChoice();\n    ctx.drawImage(this.activeFrameSet, this.frame * this.width, 0, this.width, this.height, this.pos.x, this.pos.y, this.width, this.height);\n    this.frameSetAnimation();\n  }\n  applyDrag() {\n    if (this.vel.y <= 0 && this.vel.x > 0) {\n      this.vel.x -= this.drag;\n    }\n  }\n  faceCharacter(playerChar) {\n    if (playerChar.pos.x < this.pos.x) this.animationDirection = 1;else this.animationDirection = -1;\n  }\n  moveHorizontal() {\n    this.pos.x += this.vel.x * this.direction.horizontal;\n  }\n  update() {\n    this.applyDrag();\n    this.moveHorizontal();\n    this.moveVertical();\n    //this.changeAnimationState();\n  }\n\n  launchSandbag() {}\n  reset(dimensions) {\n    this.pos.x = 800;\n    this.pos.y = 0;\n    this.hp = CONSTANTS.DEFAULT_HP;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/sandbag.js\n");

/***/ }),

/***/ "./src/scripts/timer.js":
/*!******************************!*\
  !*** ./src/scripts/timer.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Timer; }\n/* harmony export */ });\nclass Timer {\n  constructor(dimensions) {\n    this.count = 60;\n  }\n  decrimentTimer() {\n    setInterval(() => {\n      if (this.count > 0) this.count--;else {\n        this.count = 0;\n        return true;\n      }\n    }, 1000);\n  }\n  checkGameOver() {\n    if (this.count <= 0) return true;else return false;\n  }\n  reset() {\n    this.count = 60;\n  }\n  draw(ctx) {\n    ctx.font = \"30px Calibri\";\n    if (this.count > 0) ctx.fillText(`Time left: ${this.count}`, 30, 120);else ctx.fillText(`Time left: GAME OVER`, 30, 120);\n  }\n  update() {}\n  animate(ctx) {\n    this.update();\n    this.draw(ctx);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy90aW1lci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQWUsTUFBTUEsS0FBSztFQUV0QkMsV0FBVyxDQUFDQyxVQUFVLEVBQUM7SUFDbkIsSUFBSSxDQUFDQyxLQUFLLEdBQUcsRUFBRTtFQUNqQjtFQUVGQyxjQUFjLEdBQUU7SUFDZEMsV0FBVyxDQUFDLE1BQUk7TUFDZCxJQUFJLElBQUksQ0FBQ0YsS0FBSyxHQUFHLENBQUMsRUFBQyxJQUFJLENBQUNBLEtBQUssRUFBRyxDQUFDLEtBQzdCO1FBQ0YsSUFBSSxDQUFDQSxLQUFLLEdBQUcsQ0FBQztRQUNkLE9BQU8sSUFBSTtNQUNiO0lBQ0YsQ0FBQyxFQUFDLElBQUksQ0FBQztFQUVUO0VBRUFHLGFBQWEsR0FBRTtJQUNiLElBQUksSUFBSSxDQUFDSCxLQUFLLElBQUksQ0FBQyxFQUFFLE9BQU8sSUFBSSxDQUFDLEtBQzVCLE9BQU8sS0FBSztFQUNuQjtFQUNBSSxLQUFLLEdBQUU7SUFDSCxJQUFJLENBQUNKLEtBQUssR0FBRyxFQUFFO0VBQ25CO0VBQ0FLLElBQUksQ0FBQ0MsR0FBRyxFQUFDO0lBQ1BBLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHLGNBQWM7SUFDekIsSUFBSSxJQUFJLENBQUNQLEtBQUssR0FBRyxDQUFDLEVBQUVNLEdBQUcsQ0FBQ0UsUUFBUSxDQUFFLGNBQWEsSUFBSSxDQUFDUixLQUFNLEVBQUMsRUFBRSxFQUFFLEVBQUUsR0FBRyxDQUFDLE1BQ2hFTSxHQUFHLENBQUNFLFFBQVEsQ0FBRSxzQkFBcUIsRUFBRSxFQUFFLEVBQUUsR0FBRyxDQUFDO0VBQ3BEO0VBSUFDLE1BQU0sR0FBRSxDQUNSO0VBQ0FDLE9BQU8sQ0FBQ0osR0FBRyxFQUFDO0lBQ1YsSUFBSSxDQUFDRyxNQUFNLEVBQUU7SUFDYixJQUFJLENBQUNKLElBQUksQ0FBQ0MsR0FBRyxDQUFDO0VBQ2hCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvc2NyaXB0cy90aW1lci5qcz8xNWE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVye1xuXG4gICAgY29uc3RydWN0b3IoZGltZW5zaW9ucyl7XG4gICAgICAgIHRoaXMuY291bnQgPSA2MDtcbiAgICAgIH1cblxuICAgIGRlY3JpbWVudFRpbWVyKCl7XG4gICAgICBzZXRJbnRlcnZhbCgoKT0+e1xuICAgICAgICBpZiAodGhpcy5jb3VudCA+IDApdGhpcy5jb3VudCAtLTtcbiAgICAgICAgZWxzZXtcbiAgICAgICAgICB0aGlzLmNvdW50ID0gMDtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfSwxMDAwKVxuICAgICAgXG4gICAgfVxuXG4gICAgY2hlY2tHYW1lT3Zlcigpe1xuICAgICAgaWYgKHRoaXMuY291bnQgPD0gMCkgcmV0dXJuIHRydWU7XG4gICAgICBlbHNlIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmVzZXQoKXtcbiAgICAgICAgdGhpcy5jb3VudCA9IDYwO1xuICAgIH1cbiAgICBkcmF3KGN0eCl7XG4gICAgICBjdHguZm9udCA9IFwiMzBweCBDYWxpYnJpXCJcbiAgICAgIGlmICh0aGlzLmNvdW50ID4gMCkgY3R4LmZpbGxUZXh0KGBUaW1lIGxlZnQ6ICR7dGhpcy5jb3VudH1gLCAzMCwgMTIwKVxuICAgICAgZWxzZSBjdHguZmlsbFRleHQoYFRpbWUgbGVmdDogR0FNRSBPVkVSYCwgMzAsIDEyMClcbiAgICB9XG5cblxuXG4gICAgdXBkYXRlKCl7XG4gICAgfVxuICAgIGFuaW1hdGUoY3R4KXtcbiAgICAgIHRoaXMudXBkYXRlKClcbiAgICAgIHRoaXMuZHJhdyhjdHgpXG4gICAgfVxuICB9Il0sIm5hbWVzIjpbIlRpbWVyIiwiY29uc3RydWN0b3IiLCJkaW1lbnNpb25zIiwiY291bnQiLCJkZWNyaW1lbnRUaW1lciIsInNldEludGVydmFsIiwiY2hlY2tHYW1lT3ZlciIsInJlc2V0IiwiZHJhdyIsImN0eCIsImZvbnQiLCJmaWxsVGV4dCIsInVwZGF0ZSIsImFuaW1hdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/timer.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguc2Nzcz85NzQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;